{"version":3,"file":"SelectComponents.mjs","sources":["../../../admin/src/components/SelectComponents.tsx"],"sourcesContent":["import { Field, MultiSelectNested } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { useDataManager } from '../hooks/useDataManager';\nimport { getTrad } from '../utils';\nimport { findAttribute } from '../utils/findAttribute';\n\nimport type { Component } from '../types';\n\ntype SelectComponentsProps = {\n  dynamicZoneTarget: string;\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n    values?: object;\n  };\n  name: string;\n  onChange: (value: {\n    target: {\n      name: string;\n      value: string[];\n      type?: string;\n    };\n  }) => void;\n  value: string[];\n};\n\nexport const SelectComponents = ({\n  dynamicZoneTarget,\n  intlLabel,\n  name,\n  onChange,\n  value,\n}: SelectComponentsProps) => {\n  const { formatMessage } = useIntl();\n  const { componentsGroupedByCategory, modifiedData } = useDataManager();\n  const dzSchema = findAttribute(modifiedData.contentType.schema.attributes, dynamicZoneTarget);\n  const alreadyUsedComponents = dzSchema?.components || [];\n  const filteredComponentsGroupedByCategory = Object.keys(componentsGroupedByCategory).reduce(\n    (acc, current) => {\n      const filteredComponents = componentsGroupedByCategory[current].filter(({ uid }) => {\n        return !alreadyUsedComponents.includes(uid);\n      });\n\n      if (filteredComponents.length > 0) {\n        acc[current] = filteredComponents;\n      }\n\n      return acc;\n    },\n    {} as Record<string, Component[]>\n  );\n  const options = Object.entries(filteredComponentsGroupedByCategory).reduce(\n    (acc, current) => {\n      const [categoryName, components] = current;\n      const section = {\n        label: categoryName,\n        children: components.map(({ uid, schema: { displayName } }) => {\n          return { label: displayName, value: uid };\n        }),\n      };\n\n      acc.push(section);\n\n      return acc;\n    },\n    [] as Array<{ label: string; children: Array<{ label: string; value: string }> }>\n  );\n\n  const displayedValue = formatMessage(\n    {\n      id: getTrad('components.SelectComponents.displayed-value'),\n      defaultMessage:\n        '{number, plural, =0 {# components} one {# component} other {# components}} selected',\n    },\n    { number: value?.length ?? 0 }\n  );\n\n  return (\n    <Field.Root name={name}>\n      <Field.Label>{formatMessage(intlLabel)}</Field.Label>\n      <MultiSelectNested\n        id=\"select1\"\n        customizeContent={() => displayedValue}\n        onChange={(values) => {\n          onChange({ target: { name, value: values, type: 'select-components' } });\n        }}\n        options={options}\n        value={value || []}\n      />\n    </Field.Root>\n  );\n};\n"],"names":["SelectComponents","dynamicZoneTarget","intlLabel","name","onChange","value","formatMessage","useIntl","componentsGroupedByCategory","modifiedData","useDataManager","dzSchema","findAttribute","contentType","schema","attributes","alreadyUsedComponents","components","filteredComponentsGroupedByCategory","Object","keys","reduce","acc","current","filteredComponents","filter","uid","includes","length","options","entries","categoryName","section","label","children","map","displayName","push","displayedValue","id","getTrad","defaultMessage","number","_jsxs","Field","Root","_jsx","Label","MultiSelectNested","customizeContent","values","target","type"],"mappings":";;;;;;;AA2BaA,MAAAA,gBAAAA,GAAmB,CAAC,EAC/BC,iBAAiB,EACjBC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACiB,GAAA;IACtB,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;AAC1B,IAAA,MAAM,EAAEC,2BAA2B,EAAEC,YAAY,EAAE,GAAGC,cAAAA,EAAAA;IACtD,MAAMC,QAAAA,GAAWC,cAAcH,YAAaI,CAAAA,WAAW,CAACC,MAAM,CAACC,UAAU,EAAEd,iBAAAA,CAAAA;IAC3E,MAAMe,qBAAAA,GAAwBL,QAAUM,EAAAA,UAAAA,IAAc,EAAE;IACxD,MAAMC,mCAAAA,GAAsCC,OAAOC,IAAI,CAACZ,6BAA6Ba,MAAM,CACzF,CAACC,GAAKC,EAAAA,OAAAA,GAAAA;QACJ,MAAMC,kBAAAA,GAAqBhB,2BAA2B,CAACe,OAAQ,CAAA,CAACE,MAAM,CAAC,CAAC,EAAEC,GAAG,EAAE,GAAA;YAC7E,OAAO,CAACV,qBAAsBW,CAAAA,QAAQ,CAACD,GAAAA,CAAAA;AACzC,SAAA,CAAA;QAEA,IAAIF,kBAAAA,CAAmBI,MAAM,GAAG,CAAG,EAAA;YACjCN,GAAG,CAACC,QAAQ,GAAGC,kBAAAA;AACjB;QAEA,OAAOF,GAAAA;AACT,KAAA,EACA,EAAC,CAAA;IAEH,MAAMO,OAAAA,GAAUV,OAAOW,OAAO,CAACZ,qCAAqCG,MAAM,CACxE,CAACC,GAAKC,EAAAA,OAAAA,GAAAA;QACJ,MAAM,CAACQ,YAAcd,EAAAA,UAAAA,CAAW,GAAGM,OAAAA;AACnC,QAAA,MAAMS,OAAU,GAAA;YACdC,KAAOF,EAAAA,YAAAA;YACPG,QAAUjB,EAAAA,UAAAA,CAAWkB,GAAG,CAAC,CAAC,EAAET,GAAG,EAAEZ,MAAQ,EAAA,EAAEsB,WAAW,EAAE,EAAE,GAAA;gBACxD,OAAO;oBAAEH,KAAOG,EAAAA,WAAAA;oBAAa/B,KAAOqB,EAAAA;AAAI,iBAAA;AAC1C,aAAA;AACF,SAAA;AAEAJ,QAAAA,GAAAA,CAAIe,IAAI,CAACL,OAAAA,CAAAA;QAET,OAAOV,GAAAA;AACT,KAAA,EACA,EAAE,CAAA;AAGJ,IAAA,MAAMgB,iBAAiBhC,aACrB,CAAA;AACEiC,QAAAA,EAAAA,EAAIC,OAAQ,CAAA,6CAAA,CAAA;QACZC,cACE,EAAA;KAEJ,EAAA;AAAEC,QAAAA,MAAAA,EAAQrC,OAAOuB,MAAU,IAAA;AAAE,KAAA,CAAA;IAG/B,qBACEe,IAAA,CAACC,MAAMC,IAAI,EAAA;QAAC1C,IAAMA,EAAAA,IAAAA;;AAChB,0BAAA2C,GAAA,CAACF,MAAMG,KAAK,EAAA;0BAAEzC,aAAcJ,CAAAA,SAAAA;;0BAC5B4C,GAACE,CAAAA,iBAAAA,EAAAA;gBACCT,EAAG,EAAA,SAAA;AACHU,gBAAAA,gBAAAA,EAAkB,IAAMX,cAAAA;AACxBlC,gBAAAA,QAAAA,EAAU,CAAC8C,MAAAA,GAAAA;oBACT9C,QAAS,CAAA;wBAAE+C,MAAQ,EAAA;AAAEhD,4BAAAA,IAAAA;4BAAME,KAAO6C,EAAAA,MAAAA;4BAAQE,IAAM,EAAA;AAAoB;AAAE,qBAAA,CAAA;AACxE,iBAAA;gBACAvB,OAASA,EAAAA,OAAAA;AACTxB,gBAAAA,KAAAA,EAAOA,SAAS;;;;AAIxB;;;;"}