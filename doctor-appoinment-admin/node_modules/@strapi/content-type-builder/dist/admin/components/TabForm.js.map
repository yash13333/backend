{"version":3,"file":"TabForm.js","sources":["../../../admin/src/components/TabForm.tsx"],"sourcesContent":["import { Box, Grid, Typography } from '@strapi/design-system';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport { GenericInput } from './GenericInputs';\n\ninterface TabFormProps {\n  form: Array<Record<string, any>>;\n  formErrors: Record<string, any>;\n  genericInputProps: Record<string, any>;\n  modifiedData: Record<string, any>;\n  onChange: (value: any) => void;\n}\n\n/* eslint-disable react/no-array-index-key */\nexport const TabForm = ({\n  form,\n  formErrors,\n  genericInputProps,\n  modifiedData,\n  onChange,\n}: TabFormProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <>\n      {form.map((section, sectionIndex) => {\n        // Don't display an empty section\n        if (section.items.length === 0) {\n          return null;\n        }\n\n        return (\n          <Box key={sectionIndex}>\n            {section.sectionTitle && (\n              <Box paddingBottom={4}>\n                <Typography variant=\"delta\" tag=\"h3\">\n                  {formatMessage(section.sectionTitle)}\n                </Typography>\n              </Box>\n            )}\n            <Grid.Root gap={4}>\n              {section.items.map((input: any, i: number) => {\n                const key = `${sectionIndex}.${i}`;\n\n                /**\n                 * Use undefined as the default value because not every input wants a string e.g. Date pickers\n                 */\n                const value = get(modifiedData, input.name, undefined);\n\n                // When extending the yup schema of an existing field (like in https://github.com/strapi/strapi/blob/293ff3b8f9559236609d123a2774e3be05ce8274/packages/strapi-plugin-i18n/admin/src/index.js#L52)\n                // and triggering a yup validation error in the UI (missing a required field for example)\n                // We got an object that looks like: formErrors = { \"pluginOptions.i18n.localized\": {...} }\n                // In order to deal with this error, we can't rely on lodash.get to resolve this key\n                // - lodash will try to access {pluginOptions: {i18n: {localized: true}}})\n                // - and we just want to access { \"pluginOptions.i18n.localized\": {...} }\n                // NOTE: this is a hack\n                const pluginOptionError = Object.keys(formErrors).find((key) => key === input.name);\n\n                // Retrieve the error for a specific input\n                const errorId = pluginOptionError\n                  ? formErrors[pluginOptionError].id\n                  : get(\n                      formErrors,\n                      [\n                        ...input.name\n                          .split('.')\n                          // The filter here is used when creating a component\n                          // in the component step 1 modal\n                          // Since the component info is stored in the\n                          // componentToCreate object we can access the error\n                          // By removing the key\n                          .filter((key: string) => key !== 'componentToCreate'),\n                        'id',\n                      ],\n                      null\n                    );\n\n                if (input.type === 'pushRight') {\n                  return (\n                    <Grid.Item\n                      col={input.size || 6}\n                      key={input.name || key}\n                      direction=\"column\"\n                      alignItems=\"stretch\"\n                    >\n                      <div />\n                    </Grid.Item>\n                  );\n                }\n\n                return (\n                  <Grid.Item\n                    col={input.size || 6}\n                    key={input.name || key}\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                  >\n                    <GenericInput\n                      {...input}\n                      {...genericInputProps}\n                      error={errorId}\n                      onChange={onChange}\n                      value={value}\n                    />\n                  </Grid.Item>\n                );\n              })}\n            </Grid.Root>\n          </Box>\n        );\n      })}\n    </>\n  );\n};\n"],"names":["TabForm","form","formErrors","genericInputProps","modifiedData","onChange","formatMessage","useIntl","_jsx","_Fragment","map","section","sectionIndex","items","length","_jsxs","Box","sectionTitle","paddingBottom","Typography","variant","tag","Grid","Root","gap","input","i","key","value","get","name","undefined","pluginOptionError","Object","keys","find","errorId","id","split","filter","type","Item","col","size","direction","alignItems","div","GenericInput","error"],"mappings":"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"}