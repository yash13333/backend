{"version":3,"file":"Relation.js","sources":["../../../../admin/src/components/Relation/Relation.tsx"],"sourcesContent":["import { Flex } from '@strapi/design-system';\n\nimport { getRelationType } from '../../utils/getRelationType';\n\nimport { RelationFormBox } from './RelationField/RelationField';\nimport { RelationNaturePicker } from './RelationNaturePicker/RelationNaturePicker';\n\ninterface RelationProps {\n  formErrors: Record<string, any>;\n  mainBoxHeader: string;\n  modifiedData: Record<string, any>;\n  onChange: (value: any) => void;\n  naturePickerType: string;\n}\n\nexport const Relation = ({\n  formErrors,\n  mainBoxHeader,\n  modifiedData,\n  naturePickerType,\n  onChange,\n}: RelationProps) => {\n  const relationType = getRelationType(modifiedData.relation, modifiedData.targetAttribute);\n\n  return (\n    <Flex style={{ position: 'relative' }}>\n      <RelationFormBox\n        isMain\n        header={mainBoxHeader}\n        error={formErrors?.name || null}\n        name=\"name\"\n        onChange={onChange}\n        value={modifiedData?.name || ''}\n      />\n      <RelationNaturePicker\n        naturePickerType={naturePickerType}\n        oneThatIsCreatingARelationWithAnother={mainBoxHeader}\n        relationType={relationType!}\n        target={modifiedData.target}\n      />\n      <RelationFormBox\n        disabled={['oneWay', 'manyWay'].includes(relationType!)}\n        error={formErrors?.targetAttribute || null}\n        name=\"targetAttribute\"\n        onChange={onChange}\n        oneThatIsCreatingARelationWithAnother={mainBoxHeader}\n        target={modifiedData.target}\n        value={modifiedData?.targetAttribute || ''}\n      />\n    </Flex>\n  );\n};\n"],"names":["Relation","formErrors","mainBoxHeader","modifiedData","naturePickerType","onChange","relationType","getRelationType","relation","targetAttribute","_jsxs","Flex","style","position","_jsx","RelationFormBox","isMain","header","error","name","value","RelationNaturePicker","oneThatIsCreatingARelationWithAnother","target","disabled","includes"],"mappings":";;;;;;;;AAeaA,MAAAA,QAAAA,GAAW,CAAC,EACvBC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,gBAAgB,EAChBC,QAAQ,EACM,GAAA;AACd,IAAA,MAAMC,eAAeC,+BAAgBJ,CAAAA,YAAAA,CAAaK,QAAQ,EAAEL,aAAaM,eAAe,CAAA;AAExF,IAAA,qBACEC,eAACC,CAAAA,iBAAAA,EAAAA;QAAKC,KAAO,EAAA;YAAEC,QAAU,EAAA;AAAW,SAAA;;0BAClCC,cAACC,CAAAA,6BAAAA,EAAAA;gBACCC,MAAM,EAAA,IAAA;gBACNC,MAAQf,EAAAA,aAAAA;AACRgB,gBAAAA,KAAAA,EAAOjB,YAAYkB,IAAQ,IAAA,IAAA;gBAC3BA,IAAK,EAAA,MAAA;gBACLd,QAAUA,EAAAA,QAAAA;AACVe,gBAAAA,KAAAA,EAAOjB,cAAcgB,IAAQ,IAAA;;0BAE/BL,cAACO,CAAAA,yCAAAA,EAAAA;gBACCjB,gBAAkBA,EAAAA,gBAAAA;gBAClBkB,qCAAuCpB,EAAAA,aAAAA;gBACvCI,YAAcA,EAAAA,YAAAA;AACdiB,gBAAAA,MAAAA,EAAQpB,aAAaoB;;0BAEvBT,cAACC,CAAAA,6BAAAA,EAAAA;gBACCS,QAAU,EAAA;AAAC,oBAAA,QAAA;AAAU,oBAAA;AAAU,iBAAA,CAACC,QAAQ,CAACnB,YAAAA,CAAAA;AACzCY,gBAAAA,KAAAA,EAAOjB,YAAYQ,eAAmB,IAAA,IAAA;gBACtCU,IAAK,EAAA,iBAAA;gBACLd,QAAUA,EAAAA,QAAAA;gBACViB,qCAAuCpB,EAAAA,aAAAA;AACvCqB,gBAAAA,MAAAA,EAAQpB,aAAaoB,MAAM;AAC3BH,gBAAAA,KAAAA,EAAOjB,cAAcM,eAAmB,IAAA;;;;AAIhD;;;;"}