{"version":3,"file":"FormModalHeader.mjs","sources":["../../../admin/src/components/FormModalHeader.tsx"],"sourcesContent":["/**\n *\n * FormModalHeader\n *\n */\nimport { Box, Flex, Breadcrumbs, Crumb, Link, Modal } from '@strapi/design-system';\nimport { ArrowLeft } from '@strapi/icons';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\n\nimport { useDataManager } from '../hooks/useDataManager';\nimport { useFormModalNavigation } from '../hooks/useFormModalNavigation';\nimport { getTrad } from '../utils';\n\nimport { AttributeIcon, IconByType } from './AttributeIcon';\n\nimport type { SchemaType } from '../types';\nimport type { Internal } from '@strapi/types';\n\ninterface Header {\n  label: string;\n  info?: { category: string; name: string };\n}\n\ninterface FormModalHeaderProps {\n  actionType?: string | null;\n  attributeName: string;\n  attributeType: IconByType;\n  categoryName: string;\n  contentTypeKind: IconByType;\n  dynamicZoneTarget: string;\n  forTarget: SchemaType;\n  modalType: string | null;\n  targetUid: Internal.UID.Schema;\n  customFieldUid?: string | null;\n  showBackLink?: boolean;\n}\n\nexport const FormModalHeader = ({\n  actionType = null,\n  attributeName,\n  attributeType,\n  categoryName,\n  contentTypeKind,\n  dynamicZoneTarget,\n  forTarget,\n  modalType = null,\n  targetUid,\n  customFieldUid = null,\n  showBackLink = false,\n}: FormModalHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const { modifiedData } = useDataManager();\n  const { onOpenModalAddField } = useFormModalNavigation();\n\n  let icon: IconByType = 'component';\n  let headers: Header[] = [];\n\n  const schema = modifiedData?.[forTarget]?.[targetUid] || modifiedData?.[forTarget] || null;\n  const displayName = schema?.schema.displayName;\n\n  if (modalType === 'contentType') {\n    icon = contentTypeKind;\n  }\n\n  if (['component', 'editCategory'].includes(modalType || '')) {\n    icon = 'component';\n  }\n\n  const isCreatingMainSchema = ['component', 'contentType'].includes(modalType || '');\n\n  if (isCreatingMainSchema) {\n    let headerId = getTrad(`modalForm.component.header-${actionType}`);\n\n    if (modalType === 'contentType') {\n      headerId = getTrad(`modalForm.${contentTypeKind}.header-create`);\n    }\n\n    if (actionType === 'edit') {\n      headerId = getTrad(`modalForm.header-edit`);\n    }\n\n    return (\n      <Modal.Header>\n        <Flex>\n          <Box>\n            <AttributeIcon type={icon} />\n          </Box>\n          <Box paddingLeft={3}>\n            <Modal.Title>{formatMessage({ id: headerId }, { name: displayName })}</Modal.Title>\n          </Box>\n        </Flex>\n      </Modal.Header>\n    );\n  }\n\n  headers = [\n    {\n      label: displayName,\n      info: { category: schema?.category || null, name: schema?.schema.displayName },\n    },\n  ];\n\n  if (modalType === 'chooseAttribute') {\n    icon = ['component', 'components'].includes(forTarget) ? 'component' : schema.schema.kind;\n  }\n\n  if (modalType === 'addComponentToDynamicZone') {\n    icon = 'dynamiczone';\n    headers.push({ label: dynamicZoneTarget });\n  }\n\n  if (modalType === 'attribute' || modalType === 'customField') {\n    icon = attributeType;\n    headers.push({ label: attributeName });\n  }\n\n  if (modalType === 'editCategory') {\n    const label = formatMessage({\n      id: getTrad('modalForm.header.categories'),\n      defaultMessage: 'Categories',\n    });\n\n    headers = [{ label }, { label: categoryName }];\n  }\n\n  return (\n    <Modal.Header>\n      <Flex gap={3}>\n        {showBackLink && (\n          // This is a workaround and should use the LinkButton with a variant that currently doesn't exist\n          <Link\n            aria-label={formatMessage({\n              id: getTrad('modalForm.header.back'),\n              defaultMessage: 'Back',\n            })}\n            startIcon={<ArrowLeft />}\n            onClick={() => onOpenModalAddField({ forTarget, targetUid })}\n            href=\"#back\"\n            isExternal={false}\n          />\n        )}\n        <AttributeIcon type={icon} customField={customFieldUid} />\n\n        <Breadcrumbs label={headers.map(({ label }) => label).join(',')}>\n          {headers.map(({ label, info }, index, arr) => {\n            label = upperFirst(label);\n\n            if (!label) {\n              return null;\n            }\n\n            const key = `${label}.${index}`;\n\n            if (info?.category) {\n              label = `${label} (${upperFirst(info.category)} - ${upperFirst(info.name)})`;\n            }\n\n            return (\n              <Crumb isCurrent={index === arr.length - 1} key={key}>\n                {label}\n              </Crumb>\n            );\n          })}\n        </Breadcrumbs>\n      </Flex>\n    </Modal.Header>\n  );\n};\n"],"names":["FormModalHeader","actionType","attributeName","attributeType","categoryName","contentTypeKind","dynamicZoneTarget","forTarget","modalType","targetUid","customFieldUid","showBackLink","formatMessage","useIntl","modifiedData","useDataManager","onOpenModalAddField","useFormModalNavigation","icon","headers","schema","displayName","includes","isCreatingMainSchema","headerId","getTrad","_jsx","Modal","Header","_jsxs","Flex","Box","AttributeIcon","type","paddingLeft","Title","id","name","label","info","category","kind","push","defaultMessage","gap","Link","aria-label","startIcon","ArrowLeft","onClick","href","isExternal","customField","Breadcrumbs","map","join","index","arr","upperFirst","key","Crumb","isCurrent","length"],"mappings":"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"}