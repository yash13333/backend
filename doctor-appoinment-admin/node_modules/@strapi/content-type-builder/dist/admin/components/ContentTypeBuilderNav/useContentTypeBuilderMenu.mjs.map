{"version":3,"file":"useContentTypeBuilderMenu.mjs","sources":["../../../../admin/src/components/ContentTypeBuilderNav/useContentTypeBuilderMenu.ts"],"sourcesContent":["import { useState, MouseEvent } from 'react';\n\nimport { useTracking, useNotification } from '@strapi/admin/strapi-admin';\nimport { useCollator, useFilter } from '@strapi/design-system';\nimport isEqual from 'lodash/isEqual';\nimport { useIntl } from 'react-intl';\n\nimport { useDataManager } from '../../hooks/useDataManager';\nimport { useFormModalNavigation } from '../../hooks/useFormModalNavigation';\nimport { pluginId } from '../../pluginId';\nimport { getTrad } from '../../utils/getTrad';\n\nimport type { Internal } from '@strapi/types';\n\nexport const useContentTypeBuilderMenu = () => {\n  const {\n    components,\n    componentsGroupedByCategory,\n    contentTypes,\n    isInDevelopmentMode,\n    sortedContentTypesList,\n    modifiedData,\n    initialData,\n  } = useDataManager();\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const [searchValue, setSearchValue] = useState('');\n  const { onOpenModalCreateSchema, onOpenModalEditCategory } = useFormModalNavigation();\n  const { locale } = useIntl();\n\n  const { startsWith } = useFilter(locale, {\n    sensitivity: 'base',\n  });\n\n  const formatter = useCollator(locale, {\n    sensitivity: 'base',\n  });\n\n  // TODO: Allow creating mutliple schemas in parallel\n  const canOpenModalCreateCTorComponent =\n    !Object.keys(contentTypes).some((ct) => contentTypes[ct].isTemporary === true) &&\n    !Object.keys(components).some(\n      (component) => components[component as Internal.UID.Component].isTemporary === true\n    ) &&\n    isEqual(modifiedData, initialData);\n\n  const handleClickOpenModalCreateCollectionType = () => {\n    if (canOpenModalCreateCTorComponent) {\n      // TODO: Review tracking with product\n      trackUsage(`willCreateContentType`);\n\n      const nextState = {\n        modalType: 'contentType',\n        kind: 'collectionType',\n        actionType: 'create',\n        forTarget: 'contentType',\n      };\n\n      onOpenModalCreateSchema(nextState);\n    } else {\n      toggleNotificationCannotCreateSchema();\n    }\n  };\n\n  const handleClickOpenModalCreateSingleType = () => {\n    if (canOpenModalCreateCTorComponent) {\n      trackUsage(`willCreateSingleType`);\n\n      const nextState = {\n        modalType: 'contentType',\n        kind: 'singleType',\n        actionType: 'create',\n        forTarget: 'contentType',\n      };\n\n      onOpenModalCreateSchema(nextState);\n    } else {\n      toggleNotificationCannotCreateSchema();\n    }\n  };\n\n  const handleClickOpenModalCreateComponent = () => {\n    if (canOpenModalCreateCTorComponent) {\n      trackUsage('willCreateComponent');\n\n      const nextState = {\n        modalType: 'component',\n        kind: null,\n        actionType: 'create',\n        forTarget: 'component',\n      };\n\n      onOpenModalCreateSchema(nextState);\n    } else {\n      toggleNotificationCannotCreateSchema();\n    }\n  };\n\n  const toggleNotificationCannotCreateSchema = () => {\n    toggleNotification({\n      type: 'info',\n      message: formatMessage({\n        id: getTrad('notification.info.creating.notSaved'),\n        defaultMessage: 'Please save your work before creating a new collection type or component',\n      }),\n    });\n  };\n\n  const componentsData = Object.entries(componentsGroupedByCategory)\n    .map(([category, components]) => ({\n      name: category,\n      title: category,\n      isEditable: isInDevelopmentMode,\n      // TODO: re-add functionality to edit category name\n      onClickEdit(e: MouseEvent, data: any) {\n        e.stopPropagation();\n\n        if (canOpenModalCreateCTorComponent) {\n          onOpenModalEditCategory(data.name);\n        } else {\n          toggleNotificationCannotCreateSchema();\n        }\n      },\n      links: components\n        .map((component) => ({\n          name: component.uid,\n          to: `/plugins/${pluginId}/component-categories/${category}/${component.uid}`,\n          title: component.schema.displayName,\n        }))\n        .sort((a, b) => formatter.compare(a.title, b.title)),\n    }))\n    .sort((a, b) => formatter.compare(a.title, b.title));\n\n  const displayedContentTypes = sortedContentTypesList.filter((obj) => obj.visible);\n\n  const data = [\n    {\n      name: 'models',\n      title: {\n        id: `${getTrad('menu.section.models.name')}`,\n        defaultMessage: 'Collection Types',\n      },\n      customLink: isInDevelopmentMode && {\n        id: `${getTrad('button.model.create')}`,\n        defaultMessage: 'Create new collection type',\n        onClick: handleClickOpenModalCreateCollectionType,\n      },\n      links: displayedContentTypes.filter((contentType) => contentType.kind === 'collectionType'),\n    },\n    {\n      name: 'singleTypes',\n      title: {\n        id: `${getTrad('menu.section.single-types.name')}`,\n        defaultMessage: 'Single Types',\n      },\n      customLink: isInDevelopmentMode && {\n        id: `${getTrad('button.single-types.create')}`,\n        defaultMessage: 'Create new single type',\n        onClick: handleClickOpenModalCreateSingleType,\n      },\n      links: displayedContentTypes.filter((singleType) => singleType.kind === 'singleType'),\n    },\n    {\n      name: 'components',\n      title: {\n        id: `${getTrad('menu.section.components.name')}`,\n        defaultMessage: 'Components',\n      },\n      customLink: isInDevelopmentMode && {\n        id: `${getTrad('button.component.create')}`,\n        defaultMessage: 'Create a new component',\n        onClick: handleClickOpenModalCreateComponent,\n      },\n      links: componentsData,\n    },\n  ].map((section) => {\n    const hasChild = section.links.some((l) => Array.isArray(l.links));\n\n    if (hasChild) {\n      let filteredLinksCount = 0;\n\n      return {\n        ...section,\n        links: section.links\n          .map((link) => {\n            const filteredLinks = link.links.filter((link: any) =>\n              startsWith(link.title, searchValue)\n            );\n\n            if (filteredLinks.length === 0) {\n              return null;\n            }\n\n            filteredLinksCount += filteredLinks.length;\n\n            return {\n              ...link,\n              links: filteredLinks.sort((a: any, b: any) => formatter.compare(a.title, b.title)),\n            };\n          })\n          .filter(Boolean),\n        linksCount: filteredLinksCount,\n      };\n    }\n\n    const filteredLinks = section.links\n      .filter((link) => startsWith(link.title, searchValue))\n      .sort((a, b) => formatter.compare(a.title, b.title));\n\n    return {\n      ...section,\n      links: filteredLinks,\n      linksCount: filteredLinks.length,\n    };\n  });\n\n  return {\n    menu: data,\n    search: {\n      value: searchValue,\n      onChange: setSearchValue,\n      clear: () => setSearchValue(''),\n    },\n  };\n};\n"],"names":["useContentTypeBuilderMenu","components","componentsGroupedByCategory","contentTypes","isInDevelopmentMode","sortedContentTypesList","modifiedData","initialData","useDataManager","toggleNotification","useNotification","formatMessage","useIntl","trackUsage","useTracking","searchValue","setSearchValue","useState","onOpenModalCreateSchema","onOpenModalEditCategory","useFormModalNavigation","locale","startsWith","useFilter","sensitivity","formatter","useCollator","canOpenModalCreateCTorComponent","Object","keys","some","ct","isTemporary","component","isEqual","handleClickOpenModalCreateCollectionType","nextState","modalType","kind","actionType","forTarget","toggleNotificationCannotCreateSchema","handleClickOpenModalCreateSingleType","handleClickOpenModalCreateComponent","type","message","id","getTrad","defaultMessage","componentsData","entries","map","category","name","title","isEditable","onClickEdit","e","data","stopPropagation","links","uid","to","pluginId","schema","displayName","sort","a","b","compare","displayedContentTypes","filter","obj","visible","customLink","onClick","contentType","singleType","section","hasChild","l","Array","isArray","filteredLinksCount","link","filteredLinks","length","Boolean","linksCount","menu","search","value","onChange","clear"],"mappings":"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"}