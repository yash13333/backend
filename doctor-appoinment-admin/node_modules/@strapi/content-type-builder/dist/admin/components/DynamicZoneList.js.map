{"version":3,"file":"DynamicZoneList.js","sources":["../../../admin/src/components/DynamicZoneList.tsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { Plus } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useDataManager } from '../hooks/useDataManager';\nimport { getTrad } from '../utils/getTrad';\n\nimport { ComponentCard } from './ComponentCard';\nimport { ComponentList } from './ComponentList';\nimport { Tr } from './Tr';\n\nimport type { Internal } from '@strapi/types';\n\ninterface DynamicZoneListProps {\n  addComponent: (name?: string) => void;\n  components: Array<string>;\n  customRowComponent?: () => void;\n  name?: string;\n  targetUid: Internal.UID.Component;\n}\n\nconst StyledAddIcon = styled(Plus)`\n  width: 3.2rem;\n  height: 3.2rem;\n  padding: 0.9rem;\n  border-radius: 6.4rem;\n  background: ${({ theme }) => theme.colors.primary100};\n  path {\n    fill: ${({ theme }) => theme.colors.primary600};\n  }\n`;\n\nconst FixedBox = styled(Box)`\n  height: 9rem;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n`;\n\nconst ScrollableStack = styled(Flex)`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst ComponentContentBox = styled(Box)`\n  padding-top: 9rem;\n`;\n\nconst ComponentStack = styled(Flex)`\n  flex-shrink: 0;\n  width: 14rem;\n  height: 8rem;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DynamicZoneList = ({\n  customRowComponent,\n  components = [],\n  addComponent,\n  name,\n  targetUid,\n}: DynamicZoneListProps) => {\n  const { isInDevelopmentMode } = useDataManager();\n  const [activeTab, setActiveTab] = useState(0);\n  const { formatMessage } = useIntl();\n\n  const toggle = (tab: number) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n  };\n\n  const handleClickAdd = () => {\n    addComponent(name);\n  };\n\n  return (\n    <Tr className=\"dynamiczone-row\" $isFromDynamicZone>\n      <td colSpan={12}>\n        <FixedBox paddingLeft={8}>\n          <ScrollableStack gap={2}>\n            {isInDevelopmentMode && (\n              <button type=\"button\" onClick={handleClickAdd}>\n                <ComponentStack direction=\"column\" alignItems=\"stretch\" gap={1}>\n                  <StyledAddIcon />\n                  <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"primary600\">\n                    {formatMessage({\n                      id: getTrad('button.component.add'),\n                      defaultMessage: 'Add a component',\n                    })}\n                  </Typography>\n                </ComponentStack>\n              </button>\n            )}\n            <Flex role=\"tablist\" gap={2}>\n              {components.map((component, index) => {\n                return (\n                  <ComponentCard\n                    key={component}\n                    dzName={name || ''}\n                    index={index}\n                    component={component}\n                    isActive={activeTab === index}\n                    isInDevelopmentMode={isInDevelopmentMode}\n                    onClick={() => toggle(index)}\n                  />\n                );\n              })}\n            </Flex>\n          </ScrollableStack>\n        </FixedBox>\n        <ComponentContentBox>\n          {components.map((component, index) => {\n            const props = {\n              customRowComponent,\n              component,\n            };\n\n            return (\n              <Box\n                id={`dz-${name}-panel-${index}`}\n                role=\"tabpanel\"\n                aria-labelledby={`dz-${name}-tab-${index}`}\n                key={component}\n                style={{ display: activeTab === index ? 'block' : 'none' }}\n              >\n                <table>\n                  <tbody>\n                    <ComponentList\n                      {...props}\n                      isFromDynamicZone\n                      component={targetUid}\n                      key={component}\n                    />\n                  </tbody>\n                </table>\n              </Box>\n            );\n          })}\n        </ComponentContentBox>\n      </td>\n    </Tr>\n  );\n};\n"],"names":["StyledAddIcon","styled","Plus","theme","colors","primary100","primary600","FixedBox","Box","ScrollableStack","Flex","ComponentContentBox","ComponentStack","DynamicZoneList","customRowComponent","components","addComponent","name","targetUid","isInDevelopmentMode","useDataManager","activeTab","setActiveTab","useState","formatMessage","useIntl","toggle","tab","handleClickAdd","_jsx","Tr","className","$isFromDynamicZone","_jsxs","td","colSpan","paddingLeft","gap","button","type","onClick","direction","alignItems","Typography","variant","fontWeight","textColor","id","getTrad","defaultMessage","role","map","component","index","ComponentCard","dzName","isActive","props","aria-labelledby","style","display","table","tbody","_createElement","ComponentList","isFromDynamicZone","key"],"mappings":"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"}