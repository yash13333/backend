{"version":3,"file":"ListRow.mjs","sources":["../../../admin/src/components/ListRow.tsx"],"sourcesContent":["import { memo } from 'react';\n\nimport { Box, Flex, IconButton, Typography } from '@strapi/design-system';\nimport { Lock, Pencil, Trash } from '@strapi/icons';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useDataManager } from '../hooks/useDataManager';\nimport { Curve } from '../icons/Curve';\nimport { getTrad } from '../utils/getTrad';\n\nimport { AttributeIcon, IconByType } from './AttributeIcon';\nimport { DisplayedType } from './DisplayedType';\nimport { UpperFirst } from './UpperFirst';\n\nimport type { SchemaType } from '../types';\n\nexport const BoxWrapper = styled(Box)`\n  position: relative;\n`;\n\ntype ListRowProps = {\n  configurable?: boolean;\n  customField?: string | null;\n  editTarget: SchemaType;\n  firstLoopComponentUid?: string | null;\n  isFromDynamicZone?: boolean;\n  name: string;\n  onClick: (\n    editTarget: string,\n    targetUid: string | null,\n    attributeName: string,\n    attributeType: string,\n    customField: string | null\n  ) => void;\n  relation?: string;\n  repeatable?: boolean;\n  secondLoopComponentUid?: string | null;\n  target?: string | null;\n  targetUid?: string | null;\n  type: IconByType;\n};\n\nexport const ListRow = memo(\n  ({\n    configurable = true,\n    customField = null,\n    editTarget,\n    firstLoopComponentUid = null,\n    isFromDynamicZone = false,\n    name,\n    onClick,\n    relation = '',\n    repeatable = false,\n    secondLoopComponentUid = null,\n    target = null,\n    targetUid = null,\n    type,\n  }: ListRowProps) => {\n    const { contentTypes, isInDevelopmentMode, removeAttribute } = useDataManager();\n    const { formatMessage } = useIntl();\n\n    const isMorph = type === 'relation' && relation.includes('morph');\n    const ico = ['integer', 'biginteger', 'float', 'decimal'].includes(type) ? 'number' : type;\n\n    const contentType = get(contentTypes, [target as keyof typeof contentTypes], {});\n    const contentTypeFriendlyName = get(contentType, ['schema', 'displayName'], '');\n    const isPluginContentType = get(contentType, 'plugin');\n\n    const src = target ? 'relation' : ico;\n\n    const handleClick = () => {\n      if (isMorph) {\n        return;\n      }\n\n      if (configurable !== false) {\n        const attrType = type;\n\n        onClick(\n          // Tells where the attribute is located in the main modifiedData object : contentType, component or components\n          editTarget,\n          // main data type uid\n          secondLoopComponentUid || firstLoopComponentUid || targetUid,\n          // Name of the attribute\n          name,\n          // Type of the attribute\n          attrType,\n          customField\n        );\n      }\n    };\n    let loopNumber;\n\n    if (secondLoopComponentUid && firstLoopComponentUid) {\n      loopNumber = 2;\n    } else if (firstLoopComponentUid) {\n      loopNumber = 1;\n    } else {\n      loopNumber = 0;\n    }\n\n    return (\n      <BoxWrapper\n        tag=\"tr\"\n        onClick={isInDevelopmentMode && configurable && !isMorph ? handleClick : undefined}\n      >\n        <td style={{ position: 'relative' }}>\n          {loopNumber !== 0 && <Curve color={isFromDynamicZone ? 'primary200' : 'neutral150'} />}\n          <Flex paddingLeft={2} gap={4}>\n            <AttributeIcon type={src} customField={customField} />\n            <Typography textColor=\"neutral800\" fontWeight=\"bold\">\n              {name}\n            </Typography>\n          </Flex>\n        </td>\n        <td>\n          {target ? (\n            <Typography textColor=\"neutral800\">\n              {formatMessage({\n                id: getTrad(\n                  `modelPage.attribute.${isMorph ? 'relation-polymorphic' : 'relationWith'}`\n                ),\n                defaultMessage: 'Relation with',\n              })}\n              &nbsp;\n              <span style={{ fontStyle: 'italic' }}>\n                <UpperFirst content={contentTypeFriendlyName} />\n                &nbsp;\n                {isPluginContentType &&\n                  `(${formatMessage({\n                    id: getTrad(`from`),\n                    defaultMessage: 'from',\n                  })}: ${isPluginContentType})`}\n              </span>\n            </Typography>\n          ) : (\n            <DisplayedType type={type} customField={customField} repeatable={repeatable} />\n          )}\n        </td>\n        <td>\n          {isInDevelopmentMode ? (\n            <Flex justifyContent=\"flex-end\" onClick={(e) => e.stopPropagation()}>\n              {configurable ? (\n                <Flex gap={1}>\n                  {!isMorph && (\n                    <IconButton\n                      onClick={handleClick}\n                      label={`${formatMessage({\n                        id: 'app.utils.edit',\n                        defaultMessage: 'Edit',\n                      })} ${name}`}\n                      variant=\"ghost\"\n                    >\n                      <Pencil />\n                    </IconButton>\n                  )}\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      removeAttribute(\n                        editTarget,\n                        name,\n                        secondLoopComponentUid || firstLoopComponentUid || ''\n                      );\n                    }}\n                    label={`${formatMessage({\n                      id: 'global.delete',\n                      defaultMessage: 'Delete',\n                    })} ${name}`}\n                    variant=\"ghost\"\n                  >\n                    <Trash />\n                  </IconButton>\n                </Flex>\n              ) : (\n                <Lock />\n              )}\n            </Flex>\n          ) : (\n            /*\n            In production mode the edit icons aren't visible, therefore\n            we need to reserve the same space, otherwise the height of the\n            row might collapse, leading to bad positioned curve icons\n          */\n            <Box height=\"3.2rem\" />\n          )}\n        </td>\n      </BoxWrapper>\n    );\n  }\n);\n"],"names":["BoxWrapper","styled","Box","ListRow","memo","configurable","customField","editTarget","firstLoopComponentUid","isFromDynamicZone","name","onClick","relation","repeatable","secondLoopComponentUid","target","targetUid","type","contentTypes","isInDevelopmentMode","removeAttribute","useDataManager","formatMessage","useIntl","isMorph","includes","ico","contentType","get","contentTypeFriendlyName","isPluginContentType","src","handleClick","attrType","loopNumber","_jsxs","tag","undefined","td","style","position","_jsx","Curve","color","Flex","paddingLeft","gap","AttributeIcon","Typography","textColor","fontWeight","id","getTrad","defaultMessage","span","fontStyle","UpperFirst","content","DisplayedType","justifyContent","e","stopPropagation","IconButton","label","variant","Pencil","Trash","Lock","height"],"mappings":"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"}