{"version":3,"file":"advancedForm.mjs","sources":["../../../../../admin/src/components/FormModal/attributes/advancedForm.ts"],"sourcesContent":["import { getTrad } from '../../../utils/getTrad';\nimport { componentForm } from '../component/componentForm';\n\nimport { attributeOptions } from './attributeOptions';\n\ntype DataType = 'biginteger' | 'string' | 'integer' | 'float' | 'decimal';\n\nexport const advancedForm = {\n  blocks() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  boolean() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              autoFocus: true,\n              type: 'select-default-boolean',\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              name: 'default',\n              options: [\n                {\n                  value: 'true',\n                  key: 'true',\n                  metadatas: { intlLabel: { id: 'true', defaultMessage: 'true' } },\n                },\n                {\n                  value: '',\n                  key: 'null',\n                  metadatas: { intlLabel: { id: 'null', defaultMessage: 'null' } },\n                },\n                {\n                  value: 'false',\n                  key: 'false',\n                  metadatas: { intlLabel: { id: 'false', defaultMessage: 'false' } },\n                },\n              ],\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  component({ repeatable }: { repeatable: boolean }, step: string) {\n    if (step === '1') {\n      return { sections: componentForm.advanced() };\n    }\n\n    if (repeatable) {\n      return {\n        sections: [\n          {\n            sectionTitle: {\n              id: 'global.settings',\n              defaultMessage: 'Settings',\n            },\n            items: [\n              attributeOptions.required,\n              attributeOptions.private,\n              attributeOptions.max,\n              attributeOptions.min,\n            ],\n          },\n        ],\n      };\n    }\n\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  date({ type }: { type: string }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...attributeOptions.default,\n              type: type || 'date',\n              value: null,\n              withDefaultValue: false,\n              disabled: !type,\n              autoFocus: false,\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.unique, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  dynamiczone() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.max, attributeOptions.min],\n        },\n      ],\n    };\n  },\n  email() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...attributeOptions.default,\n              type: 'email',\n            },\n          ],\n        },\n\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n      ],\n    };\n  },\n  enumeration(data: { enum: Array<string> }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              name: 'default',\n              type: 'select',\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              validations: {},\n              options: [\n                {\n                  key: '__null_reset_value__',\n                  value: '',\n                  metadatas: {\n                    intlLabel: {\n                      id: 'components.InputSelect.option.placeholder',\n                      defaultMessage: 'Choose here',\n                    },\n                  },\n                },\n                ...(data.enum || [])\n                  .filter((value, index) => data.enum.indexOf(value) === index && value)\n                  .map((value) => {\n                    return {\n                      key: value,\n                      value,\n                      metadatas: {\n                        intlLabel: { id: `${value}.no-override`, defaultMessage: value },\n                      },\n                    };\n                  }),\n              ],\n            },\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.item.enumeration.graphql'),\n                defaultMessage: 'Name override for GraphQL',\n              },\n              name: 'enumName',\n              type: 'text',\n              validations: {},\n              description: {\n                id: getTrad('form.attribute.item.enumeration.graphql.description'),\n                defaultMessage: 'Allows you to override the default generated name for GraphQL',\n              },\n            },\n          ],\n        },\n\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  json() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  media() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.media.allowed-types'),\n                defaultMessage: 'Select allowed types of media',\n              },\n              name: 'allowedTypes',\n              type: 'allowed-types-select',\n              size: 7,\n              value: '',\n              validations: {},\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n      ],\n    };\n  },\n  number(data: { type: DataType }) {\n    const inputStep = data.type === 'decimal' || data.type === 'float' ? 'any' : 1;\n\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              autoFocus: true,\n              name: 'default',\n              type: data.type === 'biginteger' ? 'text' : 'number',\n              step: inputStep,\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              validations: {},\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.max,\n            attributeOptions.min,\n            attributeOptions.private,\n          ],\n        },\n      ],\n    };\n  },\n  password() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default] },\n\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n      ],\n    };\n  },\n  relation() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.private],\n        },\n      ],\n    };\n  },\n  richtext() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n      ],\n    };\n  },\n  text() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default, attributeOptions.regex] },\n\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n      ],\n    };\n  },\n  uid(data: { targetField: string }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            { ...attributeOptions.default, disabled: Boolean(data.targetField), type: 'text' },\n          ],\n        },\n\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n      ],\n    };\n  },\n};\n"],"names":["advancedForm","blocks","sections","sectionTitle","id","defaultMessage","items","attributeOptions","required","private","boolean","autoFocus","type","intlLabel","getTrad","name","options","value","key","metadatas","component","repeatable","step","componentForm","advanced","max","min","date","default","withDefaultValue","disabled","unique","dynamiczone","email","maxLength","minLength","enumeration","data","validations","enum","filter","index","indexOf","map","description","json","media","size","number","inputStep","password","relation","richtext","text","regex","uid","Boolean","targetField"],"mappings":"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"}