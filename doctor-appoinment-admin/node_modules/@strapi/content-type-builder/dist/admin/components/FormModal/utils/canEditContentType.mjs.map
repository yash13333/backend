{"version":3,"file":"canEditContentType.mjs","sources":["../../../../../admin/src/components/FormModal/utils/canEditContentType.ts"],"sourcesContent":["import get from 'lodash/get';\n\nimport { getRelationType } from '../../../utils/getRelationType';\n\nimport type { AttributeType } from '../../../types';\nimport type { Internal, Struct } from '@strapi/types';\n\nexport type EditableContentTypeSchema = {\n  kind: Struct.ContentTypeKind;\n  name: string;\n  attributes: AttributeType[];\n};\n\nexport type EditableContentTypeData = {\n  contentType: {\n    uid: Internal.UID.ContentType;\n    schema: EditableContentTypeSchema;\n  };\n};\n\ntype ModifiedData = {\n  kind: Struct.ContentTypeKind;\n};\n\nexport const canEditContentType = (data: Record<string, any>, modifiedData: ModifiedData) => {\n  const kind = get(data, ['contentType', 'schema', 'kind'], '');\n\n  // if kind isn't modified or content type is a single type, there is no need to check attributes.\n  if (kind === 'singleType' || kind === modifiedData.kind) {\n    return true;\n  }\n\n  const contentTypeAttributes = get(\n    data,\n    ['contentType', 'schema', 'attributes'],\n    []\n  ) as AttributeType[];\n\n  const relationAttributes = contentTypeAttributes.filter(({ relation, type, targetAttribute }) => {\n    const relationType = getRelationType(relation, targetAttribute);\n\n    return type === 'relation' && !['oneWay', 'manyWay'].includes(relationType || '');\n  });\n\n  return relationAttributes.length === 0;\n};\n"],"names":["canEditContentType","data","modifiedData","kind","get","contentTypeAttributes","relationAttributes","filter","relation","type","targetAttribute","relationType","getRelationType","includes","length"],"mappings":";;;AAwBO,MAAMA,kBAAqB,GAAA,CAACC,IAA2BC,EAAAA,YAAAA,GAAAA;IAC5D,MAAMC,IAAAA,GAAOC,IAAIH,IAAM,EAAA;AAAC,QAAA,aAAA;AAAe,QAAA,QAAA;AAAU,QAAA;KAAO,EAAE,EAAA,CAAA;;AAG1D,IAAA,IAAIE,IAAS,KAAA,YAAA,IAAgBA,IAASD,KAAAA,YAAAA,CAAaC,IAAI,EAAE;QACvD,OAAO,IAAA;AACT;IAEA,MAAME,qBAAAA,GAAwBD,IAC5BH,IACA,EAAA;AAAC,QAAA,aAAA;AAAe,QAAA,QAAA;AAAU,QAAA;AAAa,KAAA,EACvC,EAAE,CAAA;IAGJ,MAAMK,kBAAAA,GAAqBD,qBAAsBE,CAAAA,MAAM,CAAC,CAAC,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,eAAe,EAAE,GAAA;QAC1F,MAAMC,YAAAA,GAAeC,gBAAgBJ,QAAUE,EAAAA,eAAAA,CAAAA;QAE/C,OAAOD,IAAAA,KAAS,cAAc,CAAC;AAAC,YAAA,QAAA;AAAU,YAAA;SAAU,CAACI,QAAQ,CAACF,YAAgB,IAAA,EAAA,CAAA;AAChF,KAAA,CAAA;IAEA,OAAOL,kBAAAA,CAAmBQ,MAAM,KAAK,CAAA;AACvC;;;;"}