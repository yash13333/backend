{"version":3,"file":"List.js","sources":["../../../admin/src/components/List.tsx"],"sourcesContent":["import { ComponentType, Fragment } from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Button,\n  EmptyStateLayout,\n  Table,\n  Tbody,\n  Td,\n  TFooter,\n  Th,\n  Thead,\n  Tr,\n  Typography,\n} from '@strapi/design-system';\nimport { Plus } from '@strapi/icons';\nimport { EmptyDocuments } from '@strapi/icons/symbols';\nimport { useIntl } from 'react-intl';\n\nimport { useDataManager } from '../hooks/useDataManager';\nimport { useFormModalNavigation } from '../hooks/useFormModalNavigation';\nimport { getTrad } from '../utils/getTrad';\n\nimport { BoxWrapper } from './BoxWrapper';\nimport { ComponentList } from './ComponentList';\nimport { DynamicZoneList } from './DynamicZoneList';\nimport { NestedTFooter } from './NestedFooter';\n\nimport type { SchemaType } from '../types';\nimport type { Internal } from '@strapi/types';\n\ninterface ListProps {\n  addComponentToDZ?: () => void;\n  customRowComponent: ComponentType<any>;\n  editTarget: SchemaType;\n  firstLoopComponentUid?: string;\n  isFromDynamicZone?: boolean;\n  isNestedInDZComponent?: boolean;\n  isMain?: boolean;\n  items: any[];\n  secondLoopComponentUid?: string | null;\n  targetUid?: Internal.UID.Schema;\n  isSub?: boolean;\n}\n\nexport const List = ({\n  addComponentToDZ,\n  customRowComponent,\n  editTarget,\n  firstLoopComponentUid,\n  isFromDynamicZone = false,\n  isMain = false,\n  isNestedInDZComponent = false,\n  isSub = false,\n  items = [],\n  secondLoopComponentUid,\n  targetUid,\n}: ListProps) => {\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const { isInDevelopmentMode, modifiedData, isInContentTypeView } = useDataManager();\n\n  const { onOpenModalAddField } = useFormModalNavigation();\n  const onClickAddField = () => {\n    trackUsage('hasClickedCTBAddFieldBanner');\n\n    onOpenModalAddField({ forTarget: editTarget, targetUid });\n  };\n\n  if (!targetUid) {\n    return (\n      <Table colCount={2} rowCount={2}>\n        <Thead>\n          <Tr>\n            <Th>\n              <Typography variant=\"sigma\" textColor=\"neutral600\">\n                {formatMessage({ id: 'global.name', defaultMessage: 'Name' })}\n              </Typography>\n            </Th>\n            <Th>\n              <Typography variant=\"sigma\" textColor=\"neutral600\">\n                {formatMessage({ id: 'global.type', defaultMessage: 'Type' })}\n              </Typography>\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          <Tr>\n            <Td colSpan={2}>\n              <EmptyStateLayout\n                content={formatMessage({\n                  id: getTrad('table.content.create-first-content-type'),\n                  defaultMessage: 'Create your first Collection-Type',\n                })}\n                hasRadius\n                icon={<EmptyDocuments width=\"16rem\" />}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      </Table>\n    );\n  }\n\n  if (items.length === 0 && isMain) {\n    return (\n      <Table colCount={2} rowCount={2}>\n        <Thead>\n          <Tr>\n            <Th>\n              <Typography variant=\"sigma\" textColor=\"neutral600\">\n                {formatMessage({ id: 'global.name', defaultMessage: 'Name' })}\n              </Typography>\n            </Th>\n            <Th>\n              <Typography variant=\"sigma\" textColor=\"neutral600\">\n                {formatMessage({ id: 'global.type', defaultMessage: 'Type' })}\n              </Typography>\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          <Tr>\n            <Td colSpan={2}>\n              <EmptyStateLayout\n                action={\n                  <Button\n                    onClick={onClickAddField}\n                    size=\"L\"\n                    startIcon={<Plus />}\n                    variant=\"secondary\"\n                  >\n                    {formatMessage({\n                      id: getTrad('table.button.no-fields'),\n                      defaultMessage: 'Add new field',\n                    })}\n                  </Button>\n                }\n                content={formatMessage(\n                  isInContentTypeView\n                    ? {\n                        id: getTrad('table.content.no-fields.collection-type'),\n                        defaultMessage: 'Add your first field to this Collection-Type',\n                      }\n                    : {\n                        id: getTrad('table.content.no-fields.component'),\n                        defaultMessage: 'Add your first field to this component',\n                      }\n                )}\n                hasRadius\n                icon={<EmptyDocuments width=\"16rem\" />}\n              />\n            </Td>\n          </Tr>\n        </Tbody>\n      </Table>\n    );\n  }\n\n  return (\n    <BoxWrapper>\n      <Box\n        paddingLeft={6}\n        paddingRight={isMain ? 6 : 0}\n        {...(isMain && { style: { overflowX: 'auto' } })}\n      >\n        <table>\n          {isMain && (\n            <thead>\n              <tr>\n                <th>\n                  <Typography variant=\"sigma\" textColor=\"neutral800\">\n                    {formatMessage({ id: 'global.name', defaultMessage: 'Name' })}\n                  </Typography>\n                </th>\n                <th colSpan={2}>\n                  <Typography variant=\"sigma\" textColor=\"neutral800\">\n                    {formatMessage({ id: 'global.type', defaultMessage: 'Type' })}\n                  </Typography>\n                </th>\n              </tr>\n            </thead>\n          )}\n          <tbody>\n            {items.map((item) => {\n              const { type } = item;\n              const CustomRow = customRowComponent;\n\n              return (\n                <Fragment key={item.name}>\n                  <CustomRow\n                    {...item}\n                    isNestedInDZComponent={isNestedInDZComponent}\n                    targetUid={targetUid}\n                    editTarget={editTarget}\n                    firstLoopComponentUid={firstLoopComponentUid}\n                    isFromDynamicZone={isFromDynamicZone}\n                    secondLoopComponentUid={secondLoopComponentUid}\n                  />\n\n                  {type === 'component' && (\n                    <ComponentList\n                      {...item}\n                      customRowComponent={customRowComponent}\n                      targetUid={targetUid}\n                      isNestedInDZComponent={isFromDynamicZone}\n                      editTarget={editTarget}\n                      firstLoopComponentUid={firstLoopComponentUid}\n                    />\n                  )}\n\n                  {type === 'dynamiczone' && (\n                    <DynamicZoneList\n                      {...item}\n                      customRowComponent={customRowComponent}\n                      addComponent={addComponentToDZ}\n                      targetUid={targetUid}\n                    />\n                  )}\n                </Fragment>\n              );\n            })}\n          </tbody>\n        </table>\n      </Box>\n\n      {isMain && isInDevelopmentMode && (\n        <TFooter cursor=\"pointer\" icon={<Plus />} onClick={onClickAddField}>\n          {formatMessage({\n            id: getTrad(\n              `form.button.add.field.to.${\n                modifiedData.contentType\n                  ? modifiedData.contentType.schema.kind\n                  : editTarget || 'collectionType'\n              }`\n            ),\n            defaultMessage: 'Add another field',\n          })}\n        </TFooter>\n      )}\n      {isSub && isInDevelopmentMode && !isFromDynamicZone && (\n        <NestedTFooter\n          icon={<Plus />}\n          onClick={onClickAddField}\n          color={isFromDynamicZone ? 'primary' : 'neutral'}\n        >\n          {formatMessage({\n            id: getTrad(`form.button.add.field.to.component`),\n            defaultMessage: 'Add another field',\n          })}\n        </NestedTFooter>\n      )}\n    </BoxWrapper>\n  );\n};\n"],"names":["List","addComponentToDZ","customRowComponent","editTarget","firstLoopComponentUid","isFromDynamicZone","isMain","isNestedInDZComponent","isSub","items","secondLoopComponentUid","targetUid","formatMessage","useIntl","trackUsage","useTracking","isInDevelopmentMode","modifiedData","isInContentTypeView","useDataManager","onOpenModalAddField","useFormModalNavigation","onClickAddField","forTarget","_jsxs","Table","colCount","rowCount","_jsx","Thead","Tr","Th","Typography","variant","textColor","id","defaultMessage","Tbody","Td","colSpan","EmptyStateLayout","content","getTrad","hasRadius","icon","EmptyDocuments","width","length","action","Button","onClick","size","startIcon","Plus","BoxWrapper","Box","paddingLeft","paddingRight","style","overflowX","table","thead","tr","th","tbody","map","item","type","CustomRow","Fragment","ComponentList","DynamicZoneList","addComponent","name","TFooter","cursor","contentType","schema","kind","NestedTFooter","color"],"mappings":"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"}