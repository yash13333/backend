{"version":3,"file":"retrieveComponentsFromSchema.js","sources":["../../../../../admin/src/components/DataManagerProvider/utils/retrieveComponentsFromSchema.ts"],"sourcesContent":["import get from 'lodash/get';\n\nimport { makeUnique } from '../../../utils/makeUnique';\n\nimport type { AttributeType, Components } from '../../../types';\nimport type { Internal } from '@strapi/types';\n\nconst retrieveComponentsFromSchema = (\n  attributes: AttributeType[],\n  allComponentsData: Components\n): Internal.UID.Component[] => {\n  const allComponents: Internal.UID.Component[] = attributes.reduce((acc: any, current) => {\n    const type = current.type;\n    if (type === 'component') {\n      const currentComponentName = current.component;\n      // Push the existing compo\n      acc.push(currentComponentName);\n\n      const currentComponentAttributes = get(\n        allComponentsData,\n        [currentComponentName, 'schema', 'attributes'],\n        []\n      );\n\n      // Retrieve the nested ones\n      acc.push(...retrieveComponentsFromSchema(currentComponentAttributes, allComponentsData));\n    }\n\n    if (type === 'dynamiczone') {\n      const dynamicZoneComponents = current.components;\n      const componentsFromDZComponents = dynamicZoneComponents.reduce((acc2: any, currentUid) => {\n        const compoAttrs = get(allComponentsData, [currentUid, 'schema', 'attributes'], []);\n\n        return [...acc2, ...retrieveComponentsFromSchema(compoAttrs, allComponentsData)];\n      }, []);\n\n      return [...acc, ...dynamicZoneComponents, ...componentsFromDZComponents];\n    }\n\n    return acc;\n  }, []);\n\n  return makeUnique<Internal.UID.Component>(allComponents);\n};\n\nexport { retrieveComponentsFromSchema };\n"],"names":["retrieveComponentsFromSchema","attributes","allComponentsData","allComponents","reduce","acc","current","type","currentComponentName","component","push","currentComponentAttributes","get","dynamicZoneComponents","components","componentsFromDZComponents","acc2","currentUid","compoAttrs","makeUnique"],"mappings":";;;;;AAOMA,MAAAA,4BAAAA,GAA+B,CACnCC,UACAC,EAAAA,iBAAAA,GAAAA;AAEA,IAAA,MAAMC,aAA0CF,GAAAA,UAAAA,CAAWG,MAAM,CAAC,CAACC,GAAUC,EAAAA,OAAAA,GAAAA;QAC3E,MAAMC,IAAAA,GAAOD,QAAQC,IAAI;AACzB,QAAA,IAAIA,SAAS,WAAa,EAAA;YACxB,MAAMC,oBAAAA,GAAuBF,QAAQG,SAAS;;AAE9CJ,YAAAA,GAAAA,CAAIK,IAAI,CAACF,oBAAAA,CAAAA;YAET,MAAMG,0BAAAA,GAA6BC,IACjCV,iBACA,EAAA;AAACM,gBAAAA,oBAAAA;AAAsB,gBAAA,QAAA;AAAU,gBAAA;AAAa,aAAA,EAC9C,EAAE,CAAA;;YAIJH,GAAIK,CAAAA,IAAI,CAAIV,GAAAA,4BAAAA,CAA6BW,0BAA4BT,EAAAA,iBAAAA,CAAAA,CAAAA;AACvE;AAEA,QAAA,IAAIK,SAAS,aAAe,EAAA;YAC1B,MAAMM,qBAAAA,GAAwBP,QAAQQ,UAAU;AAChD,YAAA,MAAMC,0BAA6BF,GAAAA,qBAAAA,CAAsBT,MAAM,CAAC,CAACY,IAAWC,EAAAA,UAAAA,GAAAA;gBAC1E,MAAMC,UAAAA,GAAaN,IAAIV,iBAAmB,EAAA;AAACe,oBAAAA,UAAAA;AAAY,oBAAA,QAAA;AAAU,oBAAA;AAAa,iBAAA,EAAE,EAAE,CAAA;gBAElF,OAAO;AAAID,oBAAAA,GAAAA,IAAAA;AAAShB,oBAAAA,GAAAA,4BAAAA,CAA6BkB,UAAYhB,EAAAA,iBAAAA;AAAmB,iBAAA;AAClF,aAAA,EAAG,EAAE,CAAA;YAEL,OAAO;AAAIG,gBAAAA,GAAAA,GAAAA;AAAQQ,gBAAAA,GAAAA,qBAAAA;AAA0BE,gBAAAA,GAAAA;AAA2B,aAAA;AAC1E;QAEA,OAAOV,GAAAA;AACT,KAAA,EAAG,EAAE,CAAA;AAEL,IAAA,OAAOc,qBAAmChB,CAAAA,aAAAA,CAAAA;AAC5C;;;;"}