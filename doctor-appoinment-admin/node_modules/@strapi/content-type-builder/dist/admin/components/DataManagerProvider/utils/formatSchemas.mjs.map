{"version":3,"file":"formatSchemas.mjs","sources":["../../../../../admin/src/components/DataManagerProvider/utils/formatSchemas.ts"],"sourcesContent":["import { AttributeType } from '../../../types';\n\n/**\n * Format the attributes to array instead of an object\n */\nexport const formatSchemas = (schemas: Record<string, any>) => {\n  return Object.keys(schemas).reduce((acc: any, current) => {\n    const schema = schemas[current].schema;\n\n    acc[current] = {\n      ...schemas[current],\n      schema: { ...schema, attributes: toAttributesArray(schema.attributes) },\n    };\n\n    return acc;\n  }, {});\n};\n\nexport const toAttributesArray = (attributes: Record<string, AttributeType>) => {\n  return Object.keys(attributes).reduce((acc: AttributeType[], current: any) => {\n    acc.push({ ...attributes[current], name: current });\n\n    return acc;\n  }, []);\n};\n"],"names":["formatSchemas","schemas","Object","keys","reduce","acc","current","schema","attributes","toAttributesArray","push","name"],"mappings":"AAEA;;IAGaA,MAAAA,aAAAA,GAAgB,CAACC,OAAAA,GAAAA;AAC5B,IAAA,OAAOC,OAAOC,IAAI,CAACF,SAASG,MAAM,CAAC,CAACC,GAAUC,EAAAA,OAAAA,GAAAA;AAC5C,QAAA,MAAMC,MAASN,GAAAA,OAAO,CAACK,OAAAA,CAAQ,CAACC,MAAM;QAEtCF,GAAG,CAACC,QAAQ,GAAG;YACb,GAAGL,OAAO,CAACK,OAAQ,CAAA;YACnBC,MAAQ,EAAA;AAAE,gBAAA,GAAGA,MAAM;gBAAEC,UAAYC,EAAAA,iBAAAA,CAAkBF,OAAOC,UAAU;AAAE;AACxE,SAAA;QAEA,OAAOH,GAAAA;AACT,KAAA,EAAG,EAAC,CAAA;AACN;AAEO,MAAMI,oBAAoB,CAACD,UAAAA,GAAAA;AAChC,IAAA,OAAON,OAAOC,IAAI,CAACK,YAAYJ,MAAM,CAAC,CAACC,GAAsBC,EAAAA,OAAAA,GAAAA;AAC3DD,QAAAA,GAAAA,CAAIK,IAAI,CAAC;YAAE,GAAGF,UAAU,CAACF,OAAQ,CAAA;YAAEK,IAAML,EAAAA;AAAQ,SAAA,CAAA;QAEjD,OAAOD,GAAAA;AACT,KAAA,EAAG,EAAE,CAAA;AACP;;;;"}