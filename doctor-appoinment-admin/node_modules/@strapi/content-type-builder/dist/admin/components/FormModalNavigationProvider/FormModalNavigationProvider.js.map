{"version":3,"file":"FormModalNavigationProvider.js","sources":["../../../../admin/src/components/FormModalNavigationProvider/FormModalNavigationProvider.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\n\nimport { FormModalNavigationContext } from '../../contexts/FormModalNavigationContext';\n\nimport { INITIAL_STATE_DATA } from './constants';\n\ntype FormModalNavigationProviderProps = {\n  children: React.ReactNode;\n};\n\nexport type State = any;\n\nexport type ModalEventProps = {\n  attributeType?: string;\n  customFieldUid?: string;\n  dynamicZoneTarget?: string;\n  forTarget?: string;\n  targetUid?: string;\n  attributeName?: string;\n  step?: string | null;\n  kind?: string;\n  categoryName?: string;\n  modalType?: string;\n  actionType?: string;\n  isOpen?: boolean;\n  showBackLink?: boolean;\n};\n\nexport const FormModalNavigationProvider = ({ children }: FormModalNavigationProviderProps) => {\n  const [state, setFormModalNavigationState] = React.useState(INITIAL_STATE_DATA);\n  const { trackUsage } = useTracking();\n\n  const onClickSelectCustomField = ({ attributeType, customFieldUid }: ModalEventProps) => {\n    // TODO: Add tracking for custom fields\n    setFormModalNavigationState((prevState: any) => {\n      return {\n        ...prevState,\n        actionType: 'create',\n        modalType: 'customField',\n        attributeType,\n        customFieldUid,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onClickSelectField = ({ attributeType, step }: ModalEventProps) => {\n    if (state.forTarget === 'contentType') {\n      trackUsage('didSelectContentTypeFieldType', { type: attributeType });\n    }\n\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        actionType: 'create',\n        modalType: 'attribute',\n        step,\n        attributeType,\n        showBackLink: true,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onOpenModalAddComponentsToDZ = ({ dynamicZoneTarget, targetUid }: ModalEventProps) => {\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        dynamicZoneTarget,\n        targetUid,\n        modalType: 'addComponentToDynamicZone',\n        forTarget: 'contentType',\n        step: '1',\n        actionType: 'edit',\n        isOpen: true,\n      };\n    });\n  };\n\n  const onOpenModalAddField = ({ forTarget, targetUid }: ModalEventProps) => {\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        actionType: 'create',\n        forTarget,\n        targetUid,\n        modalType: 'chooseAttribute',\n        isOpen: true,\n        showBackLink: false,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onOpenModalCreateSchema = (nextState: State) => {\n    setFormModalNavigationState((prevState) => {\n      return { ...prevState, ...nextState, isOpen: true, activeTab: 'basic' };\n    });\n  };\n\n  const onOpenModalEditCategory = (categoryName: string) => {\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        categoryName,\n        actionType: 'edit',\n        modalType: 'editCategory',\n        isOpen: true,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onOpenModalEditCustomField = ({\n    forTarget,\n    targetUid,\n    attributeName,\n    attributeType,\n    customFieldUid,\n  }: ModalEventProps) => {\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        modalType: 'customField',\n        customFieldUid,\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        isOpen: true,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onOpenModalEditField = ({\n    forTarget,\n    targetUid,\n    attributeName,\n    attributeType,\n    step,\n  }: ModalEventProps) => {\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        modalType: 'attribute',\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        step,\n        isOpen: true,\n      };\n    });\n  };\n\n  const onOpenModalEditSchema = ({ modalType, forTarget, targetUid, kind }: ModalEventProps) => {\n    setFormModalNavigationState((prevState: State) => {\n      return {\n        ...prevState,\n        modalType,\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        kind,\n        isOpen: true,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onCloseModal = () => {\n    setFormModalNavigationState(INITIAL_STATE_DATA);\n  };\n\n  const onNavigateToChooseAttributeModal = ({ forTarget, targetUid }: ModalEventProps) => {\n    setFormModalNavigationState((prev: State) => {\n      return {\n        ...prev,\n        forTarget,\n        targetUid,\n        modalType: 'chooseAttribute',\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onNavigateToCreateComponentStep2 = () => {\n    setFormModalNavigationState((prev: State) => {\n      return {\n        ...prev,\n        attributeType: 'component',\n        modalType: 'attribute',\n        step: '2',\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const onNavigateToAddCompoToDZModal = ({ dynamicZoneTarget }: ModalEventProps) => {\n    setFormModalNavigationState((prev: State) => {\n      return {\n        ...prev,\n        dynamicZoneTarget,\n        modalType: 'addComponentToDynamicZone',\n        actionType: 'create',\n        step: '1',\n        attributeType: null,\n        attributeName: null,\n        activeTab: 'basic',\n      };\n    });\n  };\n\n  const setActiveTab = (value: string) => {\n    setFormModalNavigationState((prev: State) => {\n      return {\n        ...prev,\n        activeTab: value,\n      };\n    });\n  };\n\n  return (\n    <FormModalNavigationContext.Provider\n      value={\n        {\n          ...state,\n          onClickSelectField,\n          onClickSelectCustomField,\n          onCloseModal,\n          onNavigateToChooseAttributeModal,\n          onNavigateToAddCompoToDZModal,\n          onOpenModalAddComponentsToDZ,\n          onNavigateToCreateComponentStep2,\n          onOpenModalAddField,\n          onOpenModalCreateSchema,\n          onOpenModalEditCategory,\n          onOpenModalEditField,\n          onOpenModalEditCustomField,\n          onOpenModalEditSchema,\n          setFormModalNavigationState,\n          setActiveTab,\n        } as any\n      }\n    >\n      {children}\n    </FormModalNavigationContext.Provider>\n  );\n};\n"],"names":["FormModalNavigationProvider","children","state","setFormModalNavigationState","React","useState","INITIAL_STATE_DATA","trackUsage","useTracking","onClickSelectCustomField","attributeType","customFieldUid","prevState","actionType","modalType","activeTab","onClickSelectField","step","forTarget","type","showBackLink","onOpenModalAddComponentsToDZ","dynamicZoneTarget","targetUid","isOpen","onOpenModalAddField","onOpenModalCreateSchema","nextState","onOpenModalEditCategory","categoryName","onOpenModalEditCustomField","attributeName","onOpenModalEditField","onOpenModalEditSchema","kind","onCloseModal","onNavigateToChooseAttributeModal","prev","onNavigateToCreateComponentStep2","onNavigateToAddCompoToDZModal","setActiveTab","value","_jsx","FormModalNavigationContext","Provider"],"mappings":"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"}