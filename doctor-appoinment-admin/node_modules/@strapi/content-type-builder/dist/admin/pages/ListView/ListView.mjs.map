{"version":3,"file":"ListView.mjs","sources":["../../../../admin/src/pages/ListView/ListView.tsx"],"sourcesContent":["import { BackButton, useTracking, Layouts } from '@strapi/admin/strapi-admin';\nimport { Box, Button, Flex } from '@strapi/design-system';\nimport { Check, Pencil, Plus } from '@strapi/icons';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isEqual from 'lodash/isEqual';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\nimport { unstable_usePrompt as usePrompt, useMatch } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { List } from '../../components/List';\nimport { ListRow } from '../../components/ListRow';\nimport { useDataManager } from '../../hooks/useDataManager';\nimport { useFormModalNavigation } from '../../hooks/useFormModalNavigation';\nimport { getAttributeDisplayedType } from '../../utils/getAttributeDisplayedType';\nimport { getTrad } from '../../utils/getTrad';\n\nimport { LinkToCMSettingsView } from './LinkToCMSettingsView';\n\nconst LayoutsHeaderCustom = styled(Layouts.Header)`\n  overflow-wrap: anywhere;\n`;\n\nconst ListView = () => {\n  const { initialData, modifiedData, isInDevelopmentMode, isInContentTypeView, submitData } =\n    useDataManager();\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n\n  const match = useMatch('/plugins/content-type-builder/:kind/:currentUID');\n\n  const {\n    onOpenModalAddComponentsToDZ,\n    onOpenModalAddField,\n    onOpenModalEditField,\n    onOpenModalEditSchema,\n    onOpenModalEditCustomField,\n  } = useFormModalNavigation();\n\n  const firstMainDataPath = isInContentTypeView ? 'contentType' : 'component';\n  const mainDataTypeAttributesPath = [firstMainDataPath, 'schema', 'attributes'];\n  const targetUid = get(modifiedData, [firstMainDataPath, 'uid']);\n  const isTemporary = get(modifiedData, [firstMainDataPath, 'isTemporary'], false);\n  const contentTypeKind = get(modifiedData, [firstMainDataPath, 'schema', 'kind'], null);\n\n  const attributes = get(modifiedData, mainDataTypeAttributesPath, []);\n  const isFromPlugin = has(initialData, [firstMainDataPath, 'plugin']);\n  const hasModelBeenModified = !isEqual(modifiedData, initialData);\n\n  const forTarget = isInContentTypeView ? 'contentType' : 'component';\n\n  const handleClickAddComponentToDZ = (dynamicZoneTarget?: string) => {\n    onOpenModalAddComponentsToDZ({ dynamicZoneTarget, targetUid });\n  };\n\n  const handleClickEditField = async (\n    forTarget: string,\n    targetUid: string,\n    attributeName: string,\n    type: string,\n    customField: any\n  ) => {\n    const attributeType = getAttributeDisplayedType(type);\n    const step = type === 'component' ? '2' : null;\n\n    if (customField) {\n      onOpenModalEditCustomField({\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        customFieldUid: customField,\n      });\n    } else {\n      onOpenModalEditField({\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        step,\n      });\n    }\n  };\n\n  let label = get(modifiedData, [firstMainDataPath, 'schema', 'displayName'], '');\n  const kind = get(modifiedData, [firstMainDataPath, 'schema', 'kind'], '');\n\n  const isCreatingFirstContentType = match?.params.currentUID === 'create-content-type';\n\n  if (!label && isCreatingFirstContentType) {\n    label = formatMessage({\n      id: getTrad('button.model.create'),\n      defaultMessage: 'Create new collection type',\n    });\n  }\n\n  const onEdit = () => {\n    const contentType = kind || firstMainDataPath;\n\n    if (contentType === 'collectionType') {\n      trackUsage('willEditNameOfContentType');\n    }\n    if (contentType === 'singleType') {\n      trackUsage('willEditNameOfSingleType');\n    }\n\n    onOpenModalEditSchema({\n      modalType: firstMainDataPath,\n      forTarget: firstMainDataPath,\n      targetUid,\n      kind: contentType,\n    });\n  };\n\n  usePrompt({\n    when: hasModelBeenModified,\n    message: formatMessage({ id: getTrad('prompt.unsaved'), defaultMessage: 'Are you sure?' }),\n  });\n\n  const primaryAction = isInDevelopmentMode && (\n    <Flex gap={2} marginLeft={2}>\n      {/* DON'T display the add field button when the content type has not been created */}\n      {!isCreatingFirstContentType && (\n        <Button\n          startIcon={<Plus />}\n          variant=\"secondary\"\n          minWidth=\"max-content\"\n          onClick={() => {\n            onOpenModalAddField({ forTarget, targetUid });\n          }}\n        >\n          {formatMessage({\n            id: getTrad('button.attributes.add.another'),\n            defaultMessage: 'Add another field',\n          })}\n        </Button>\n      )}\n      <Button\n        startIcon={<Check />}\n        onClick={async () => await submitData()}\n        type=\"submit\"\n        disabled={isEqual(modifiedData, initialData)}\n      >\n        {formatMessage({\n          id: 'global.save',\n          defaultMessage: 'Save',\n        })}\n      </Button>\n    </Flex>\n  );\n\n  const secondaryAction = isInDevelopmentMode && !isFromPlugin && !isCreatingFirstContentType && (\n    <Button startIcon={<Pencil />} variant=\"tertiary\" onClick={onEdit}>\n      {formatMessage({\n        id: 'app.utils.edit',\n        defaultMessage: 'Edit',\n      })}\n    </Button>\n  );\n\n  return (\n    <>\n      <LayoutsHeaderCustom\n        id=\"title\"\n        primaryAction={primaryAction}\n        secondaryAction={secondaryAction}\n        title={upperFirst(label)}\n        subtitle={formatMessage({\n          id: getTrad('listView.headerLayout.description'),\n          defaultMessage: 'Build the data architecture of your content',\n        })}\n        navigationAction={<BackButton />}\n      />\n      <Layouts.Content>\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={4}>\n          <Flex justifyContent=\"flex-end\">\n            <Flex gap={2}>\n              <LinkToCMSettingsView\n                key=\"link-to-cm-settings-view\"\n                targetUid={targetUid}\n                isInContentTypeView={isInContentTypeView}\n                contentTypeKind={contentTypeKind}\n                disabled={isCreatingFirstContentType || isTemporary}\n              />\n            </Flex>\n          </Flex>\n          <Box background=\"neutral0\" shadow=\"filterShadow\" hasRadius>\n            <List\n              items={attributes}\n              customRowComponent={(props) => <ListRow {...props} onClick={handleClickEditField} />}\n              addComponentToDZ={handleClickAddComponentToDZ}\n              targetUid={targetUid}\n              editTarget={forTarget}\n              isMain\n            />\n          </Box>\n        </Flex>\n      </Layouts.Content>\n    </>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default ListView;\n"],"names":["LayoutsHeaderCustom","styled","Layouts","Header","ListView","initialData","modifiedData","isInDevelopmentMode","isInContentTypeView","submitData","useDataManager","formatMessage","useIntl","trackUsage","useTracking","match","useMatch","onOpenModalAddComponentsToDZ","onOpenModalAddField","onOpenModalEditField","onOpenModalEditSchema","onOpenModalEditCustomField","useFormModalNavigation","firstMainDataPath","mainDataTypeAttributesPath","targetUid","get","isTemporary","contentTypeKind","attributes","isFromPlugin","has","hasModelBeenModified","isEqual","forTarget","handleClickAddComponentToDZ","dynamicZoneTarget","handleClickEditField","attributeName","type","customField","attributeType","getAttributeDisplayedType","step","customFieldUid","label","kind","isCreatingFirstContentType","params","currentUID","id","getTrad","defaultMessage","onEdit","contentType","modalType","usePrompt","when","message","primaryAction","_jsxs","Flex","gap","marginLeft","_jsx","Button","startIcon","Plus","variant","minWidth","onClick","Check","disabled","secondaryAction","Pencil","_Fragment","title","upperFirst","subtitle","navigationAction","BackButton","Content","direction","alignItems","justifyContent","LinkToCMSettingsView","Box","background","shadow","hasRadius","List","items","customRowComponent","props","ListRow","addComponentToDZ","editTarget","isMain"],"mappings":"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"}