{"version":3,"file":"component-builder.mjs","sources":["../../../../server/src/services/schema-builder/component-builder.ts"],"sourcesContent":["import path from 'path';\nimport type { Internal } from '@strapi/types';\nimport _ from 'lodash';\nimport pluralize from 'pluralize';\n\nimport { strings, errors } from '@strapi/utils';\nimport { isConfigurable } from '../../utils/attributes';\nimport createSchemaHandler from './schema-handler';\n\nconst { ApplicationError } = errors;\n\nexport default function createComponentBuilder() {\n  return {\n    createComponentUID({ category, displayName }: any) {\n      return `${strings.nameToSlug(category)}.${strings.nameToSlug(displayName)}`;\n    },\n\n    createNewComponentUIDMap(components: object[]) {\n      return components.reduce((uidMap: any, component: any) => {\n        uidMap[component.tmpUID] = this.createComponentUID(component);\n        return uidMap;\n      }, {});\n    },\n\n    /**\n     * create a component in the tmpComponent map\n     */\n    createComponent(this: any, infos: any) {\n      const uid = this.createComponentUID(infos);\n\n      if (this.components.has(uid)) {\n        throw new ApplicationError('component.alreadyExists');\n      }\n\n      const handler = createSchemaHandler({\n        dir: path.join(strapi.dirs.app.components, strings.nameToSlug(infos.category)),\n        filename: `${strings.nameToSlug(infos.displayName)}.json`,\n      });\n\n      // TODO: create a utility for this\n      // Duplicate in admin/src/components/FormModal/forms/utils/createCollectionName.ts\n      const collectionName = `components_${strings.nameToCollectionName(\n        infos.category\n      )}_${strings.nameToCollectionName(pluralize(infos.displayName))}`;\n\n      this.components.forEach((compo: any) => {\n        if (compo.schema.collectionName === collectionName) {\n          throw new ApplicationError('component.alreadyExists');\n        }\n      });\n\n      handler\n        .setUID(uid)\n        .set('collectionName', collectionName)\n        .set(['info', 'displayName'], infos.displayName)\n        .set(['info', 'icon'], infos.icon)\n        .set(['info', 'description'], infos.description)\n        .set('pluginOptions', infos.pluginOptions)\n        .set('config', infos.config)\n        .setAttributes(this.convertAttributes(infos.attributes));\n\n      if (this.components.size === 0) {\n        strapi.telemetry.send('didCreateFirstComponent');\n      } else {\n        strapi.telemetry.send('didCreateComponent');\n      }\n\n      this.components.set(uid, handler);\n\n      return handler;\n    },\n\n    /**\n     * create a component in the tmpComponent map\n     */\n    editComponent(this: any, infos: any) {\n      const { uid } = infos;\n\n      if (!this.components.has(uid)) {\n        throw new errors.ApplicationError('component.notFound');\n      }\n\n      const component = this.components.get(uid);\n\n      const [, nameUID] = uid.split('.');\n\n      const newCategory = strings.nameToSlug(infos.category);\n      const newUID = `${newCategory}.${nameUID}`;\n\n      if (newUID !== uid && this.components.has(newUID)) {\n        throw new errors.ApplicationError('component.edit.alreadyExists');\n      }\n\n      const newDir = path.join(strapi.dirs.app.components, newCategory);\n\n      const oldAttributes = component.schema.attributes;\n\n      const newAttributes = _.omitBy(infos.attributes, (attr, key) => {\n        return _.has(oldAttributes, key) && !isConfigurable(oldAttributes[key]);\n      });\n\n      component\n        .setUID(newUID)\n        .setDir(newDir)\n        .set(['info', 'displayName'], infos.displayName)\n        .set(['info', 'icon'], infos.icon)\n        .set(['info', 'description'], infos.description)\n        .set('pluginOptions', infos.pluginOptions)\n        .setAttributes(this.convertAttributes(newAttributes));\n\n      if (newUID !== uid) {\n        this.components.forEach((compo: any) => {\n          compo.updateComponent(uid, newUID);\n        });\n\n        this.contentTypes.forEach((ct: any) => {\n          ct.updateComponent(uid, newUID);\n        });\n      }\n\n      return component;\n    },\n\n    deleteComponent(this: any, uid: Internal.UID.Component) {\n      if (!this.components.has(uid)) {\n        throw new errors.ApplicationError('component.notFound');\n      }\n\n      this.components.forEach((compo: any) => {\n        compo.removeComponent(uid);\n      });\n\n      this.contentTypes.forEach((ct: any) => {\n        ct.removeComponent(uid);\n      });\n\n      return this.components.get(uid).delete();\n    },\n  };\n}\n"],"names":["ApplicationError","errors","createComponentBuilder","createComponentUID","category","displayName","strings","nameToSlug","createNewComponentUIDMap","components","reduce","uidMap","component","tmpUID","createComponent","infos","uid","has","handler","createSchemaHandler","dir","path","join","strapi","dirs","app","filename","collectionName","nameToCollectionName","pluralize","forEach","compo","schema","setUID","set","icon","description","pluginOptions","config","setAttributes","convertAttributes","attributes","size","telemetry","send","editComponent","get","nameUID","split","newCategory","newUID","newDir","oldAttributes","newAttributes","_","omitBy","attr","key","isConfigurable","setDir","updateComponent","contentTypes","ct","deleteComponent","removeComponent","delete"],"mappings":"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"}