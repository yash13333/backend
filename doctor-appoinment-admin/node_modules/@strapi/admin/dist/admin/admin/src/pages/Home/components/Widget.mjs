import { jsxs, jsx } from 'react/jsx-runtime';
import * as React from 'react';
import { Flex, Typography, Box, Loader } from '@strapi/design-system';
import { PuzzlePiece, WarningCircle } from '@strapi/icons';
import { EmptyDocuments } from '@strapi/icons/symbols';
import { useIntl } from 'react-intl';

const Root = ({ title, icon = PuzzlePiece, children })=>{
    const { formatMessage } = useIntl();
    const id = React.useId();
    const Icon = icon;
    return /*#__PURE__*/ jsxs(Flex, {
        width: "100%",
        hasRadius: true,
        direction: "column",
        alignItems: "flex-start",
        background: "neutral0",
        borderColor: "neutral150",
        shadow: "tableShadow",
        tag: "section",
        gap: 4,
        padding: 6,
        "aria-labelledby": id,
        children: [
            /*#__PURE__*/ jsxs(Flex, {
                direction: "row",
                alignItems: "center",
                gap: 2,
                tag: "header",
                children: [
                    /*#__PURE__*/ jsx(Icon, {
                        fill: "neutral500",
                        "aria-hidden": true
                    }),
                    /*#__PURE__*/ jsx(Typography, {
                        textColor: "neutral500",
                        variant: "sigma",
                        tag: "h2",
                        id: id,
                        children: formatMessage(title)
                    })
                ]
            }),
            /*#__PURE__*/ jsx(Box, {
                width: "100%",
                height: "261px",
                overflow: "auto",
                tag: "main",
                children: children
            })
        ]
    });
};
const Loading = ({ children })=>{
    const { formatMessage } = useIntl();
    return /*#__PURE__*/ jsx(Flex, {
        height: "100%",
        justifyContent: "center",
        alignItems: "center",
        children: /*#__PURE__*/ jsx(Loader, {
            children: children ?? formatMessage({
                id: 'HomePage.widget.loading',
                defaultMessage: 'Loading widget content'
            })
        })
    });
};
const Error = ({ children })=>{
    const { formatMessage } = useIntl();
    return /*#__PURE__*/ jsxs(Flex, {
        height: "100%",
        direction: "column",
        justifyContent: "center",
        alignItems: "center",
        gap: 2,
        children: [
            /*#__PURE__*/ jsx(WarningCircle, {
                width: "3.2rem",
                height: "3.2rem",
                fill: "danger600"
            }),
            /*#__PURE__*/ jsx(Typography, {
                variant: "delta",
                children: formatMessage({
                    id: 'global.error',
                    defaultMessage: 'Something went wrong'
                })
            }),
            /*#__PURE__*/ jsx(Typography, {
                textColor: "neutral600",
                children: children ?? formatMessage({
                    id: 'HomePage.widget.error',
                    defaultMessage: "Couldn't load widget content."
                })
            })
        ]
    });
};
const NoData = ({ children })=>{
    const { formatMessage } = useIntl();
    return /*#__PURE__*/ jsxs(Flex, {
        height: "100%",
        direction: "column",
        justifyContent: "center",
        alignItems: "center",
        gap: 6,
        children: [
            /*#__PURE__*/ jsx(EmptyDocuments, {
                width: "16rem",
                height: "8.8rem"
            }),
            /*#__PURE__*/ jsx(Typography, {
                textColor: "neutral600",
                children: children ?? formatMessage({
                    id: 'HomePage.widget.no-data',
                    defaultMessage: 'No content found.'
                })
            })
        ]
    });
};
const Widget = {
    Root,
    Loading,
    Error,
    NoData
};

export { Widget };
//# sourceMappingURL=Widget.mjs.map
