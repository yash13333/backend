{"version":3,"file":"index.mjs","sources":["../../../../server/src/controllers/validation/index.ts"],"sourcesContent":["import _ from 'lodash';\nimport { yup, validateYupSchema, errors } from '@strapi/utils';\nimport createModelConfigurationSchema from './model-configuration';\n\nconst { PaginationError, ValidationError } = errors;\nconst TYPES = ['singleType', 'collectionType'];\n\n/**\n * Validates type kind\n */\nconst kindSchema = yup.string().oneOf(TYPES).nullable();\n\nconst bulkActionInputSchema = yup\n  .object({\n    documentIds: yup.array().of(yup.strapiID()).min(1).required(),\n  })\n  .required();\n\nconst generateUIDInputSchema = yup.object({\n  contentTypeUID: yup.string().required(),\n  field: yup.string().required(),\n  data: yup.object().required(),\n});\n\nconst checkUIDAvailabilityInputSchema = yup.object({\n  contentTypeUID: yup.string().required(),\n  field: yup.string().required(),\n  value: yup\n    .string()\n    .matches(/^[A-Za-z0-9-_.~]*$/)\n    .required(),\n});\n\nconst validateUIDField = (contentTypeUID: any, field: any) => {\n  const model = strapi.contentTypes[contentTypeUID];\n\n  if (!model) {\n    throw new ValidationError('ContentType not found');\n  }\n\n  if (\n    !_.has(model, ['attributes', field]) ||\n    _.get(model, ['attributes', field, 'type']) !== 'uid'\n  ) {\n    throw new ValidationError(`${field} must be a valid \\`uid\\` attribute`);\n  }\n};\n\nconst validatePagination = ({ page, pageSize }: any) => {\n  const pageNumber = parseInt(page, 10);\n  const pageSizeNumber = parseInt(pageSize, 10);\n\n  if (Number.isNaN(pageNumber) || pageNumber < 1) {\n    throw new PaginationError('invalid pageNumber param');\n  }\n  if (Number.isNaN(pageSizeNumber) || pageSizeNumber < 1) {\n    throw new PaginationError('invalid pageSize param');\n  }\n};\n\nconst validateKind = validateYupSchema(kindSchema);\nconst validateBulkActionInput = validateYupSchema(bulkActionInputSchema);\nconst validateGenerateUIDInput = validateYupSchema(generateUIDInputSchema);\nconst validateCheckUIDAvailabilityInput = validateYupSchema(checkUIDAvailabilityInputSchema);\n\nexport {\n  createModelConfigurationSchema,\n  validateUIDField,\n  validatePagination,\n  validateKind,\n  validateBulkActionInput,\n  validateGenerateUIDInput,\n  validateCheckUIDAvailabilityInput,\n};\n"],"names":["PaginationError","ValidationError","errors","TYPES","kindSchema","yup","string","oneOf","nullable","bulkActionInputSchema","object","documentIds","array","of","strapiID","min","required","generateUIDInputSchema","contentTypeUID","field","data","checkUIDAvailabilityInputSchema","value","matches","validateUIDField","model","strapi","contentTypes","_","has","get","validateKind","validateYupSchema","validateBulkActionInput","validateGenerateUIDInput","validateCheckUIDAvailabilityInput"],"mappings":";;;;;;AAIA,MAAM,EAAEA,eAAe,EAAEC,eAAe,EAAE,GAAGC,MAAAA;AAC7C,MAAMC,KAAQ,GAAA;AAAC,IAAA,YAAA;AAAc,IAAA;AAAiB,CAAA;AAE9C;;IAGA,MAAMC,aAAaC,GAAIC,CAAAA,MAAM,GAAGC,KAAK,CAACJ,OAAOK,QAAQ,EAAA;AAErD,MAAMC,qBAAAA,GAAwBJ,GAC3BK,CAAAA,MAAM,CAAC;IACNC,WAAaN,EAAAA,GAAAA,CAAIO,KAAK,EAAA,CAAGC,EAAE,CAACR,GAAIS,CAAAA,QAAQ,EAAIC,CAAAA,CAAAA,GAAG,CAAC,CAAA,CAAA,CAAGC,QAAQ;AAC7D,CAAA,CAAA,CACCA,QAAQ,EAAA;AAEX,MAAMC,sBAAAA,GAAyBZ,GAAIK,CAAAA,MAAM,CAAC;IACxCQ,cAAgBb,EAAAA,GAAAA,CAAIC,MAAM,EAAA,CAAGU,QAAQ,EAAA;IACrCG,KAAOd,EAAAA,GAAAA,CAAIC,MAAM,EAAA,CAAGU,QAAQ,EAAA;IAC5BI,IAAMf,EAAAA,GAAAA,CAAIK,MAAM,EAAA,CAAGM,QAAQ;AAC7B,CAAA,CAAA;AAEA,MAAMK,+BAAAA,GAAkChB,GAAIK,CAAAA,MAAM,CAAC;IACjDQ,cAAgBb,EAAAA,GAAAA,CAAIC,MAAM,EAAA,CAAGU,QAAQ,EAAA;IACrCG,KAAOd,EAAAA,GAAAA,CAAIC,MAAM,EAAA,CAAGU,QAAQ,EAAA;AAC5BM,IAAAA,KAAAA,EAAOjB,IACJC,MAAM,EAAA,CACNiB,OAAO,CAAC,sBACRP,QAAQ;AACb,CAAA,CAAA;AAEMQ,MAAAA,gBAAAA,GAAmB,CAACN,cAAqBC,EAAAA,KAAAA,GAAAA;AAC7C,IAAA,MAAMM,KAAQC,GAAAA,MAAAA,CAAOC,YAAY,CAACT,cAAe,CAAA;AAEjD,IAAA,IAAI,CAACO,KAAO,EAAA;AACV,QAAA,MAAM,IAAIxB,eAAgB,CAAA,uBAAA,CAAA;AAC5B;AAEA,IAAA,IACE,CAAC2B,CAAAA,CAAEC,GAAG,CAACJ,KAAO,EAAA;AAAC,QAAA,YAAA;AAAcN,QAAAA;KAAM,CACnCS,IAAAA,CAAAA,CAAEE,GAAG,CAACL,KAAO,EAAA;AAAC,QAAA,YAAA;AAAcN,QAAAA,KAAAA;AAAO,QAAA;AAAO,KAAA,CAAA,KAAM,KAChD,EAAA;AACA,QAAA,MAAM,IAAIlB,eAAgB,CAAA,CAAC,EAAEkB,KAAAA,CAAM,kCAAkC,CAAC,CAAA;AACxE;AACF;AAcA,MAAMY,eAAeC,iBAAkB5B,CAAAA,UAAAA;AACvC,MAAM6B,0BAA0BD,iBAAkBvB,CAAAA,qBAAAA;AAClD,MAAMyB,2BAA2BF,iBAAkBf,CAAAA,sBAAAA;AACnD,MAAMkB,oCAAoCH,iBAAkBX,CAAAA,+BAAAA;;;;"}