{"version":3,"file":"RelationModal.js","sources":["../../../../../../../admin/src/pages/EditView/components/FormInputs/Relations/RelationModal.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  ConfirmDialog,\n  DescriptionComponentRenderer,\n  Form as FormContext,\n  useRBAC,\n  useStrapiApp,\n  createContext,\n  useForm,\n  useQueryParams,\n} from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Dialog,\n  EmptyStateLayout,\n  Flex,\n  IconButton,\n  Loader,\n  Modal,\n  Typography,\n  TextButton,\n} from '@strapi/design-system';\nimport { ArrowLeft, ArrowsOut, WarningCircle } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { COLLECTION_TYPES, SINGLE_TYPES } from '../../../../../constants/collections';\nimport { PERMISSIONS } from '../../../../../constants/plugin';\nimport { buildValidParams } from '../../../../../exports';\nimport { DocumentRBAC } from '../../../../../features/DocumentRBAC';\nimport { useDoc, useDocument, type UseDocument } from '../../../../../hooks/useDocument';\nimport { type DocumentMeta } from '../../../../../hooks/useDocumentContext';\nimport { useDocumentLayout } from '../../../../../hooks/useDocumentLayout';\nimport { useLazyGetDocumentQuery } from '../../../../../services/documents';\nimport { createYupSchema } from '../../../../../utils/validation';\nimport { DocumentActionButton } from '../../../components/DocumentActions';\nimport { DocumentStatus } from '../../DocumentStatus';\nimport { FormLayout } from '../../FormLayout';\n\nimport type { ContentManagerPlugin, DocumentActionProps } from '../../../../../content-manager';\n\nexport function getCollectionType(url: string) {\n  const regex = new RegExp(`(${COLLECTION_TYPES}|${SINGLE_TYPES})`);\n  const match = url.match(regex);\n  return match ? match[1] : undefined;\n}\n\nconst StyledModalContent = styled(Modal.Content)`\n  width: 90%;\n  max-width: 100%;\n  height: 90%;\n  max-height: 100%;\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * RelationContextWrapper\n * -----------------------------------------------------------------------------------------------*/\n\ninterface State {\n  documentHistory: DocumentMeta[];\n  confirmDialogIntent:\n    | null // No dialog\n    | 'close' // Close the modal\n    | 'back' // Go back one document in the modal's history\n    | 'navigate' // Open the document in the edit view instead of in the modal\n    | DocumentMeta; // Open a specific document in the modal\n  isModalOpen: boolean;\n  hasUnsavedChanges: boolean;\n}\n\ntype Action =\n  | {\n      type: 'GO_TO_RELATION';\n      payload: {\n        document: DocumentMeta;\n        shouldBypassConfirmation: boolean;\n      };\n    }\n  | {\n      type: 'GO_BACK';\n      payload: { shouldBypassConfirmation: boolean };\n    }\n  | {\n      type: 'GO_FULL_PAGE';\n    }\n  | {\n      type: 'CANCEL_CONFIRM_DIALOG';\n    }\n  | {\n      type: 'CLOSE_MODAL';\n      payload: { shouldBypassConfirmation: boolean };\n    }\n  | {\n      type: 'SET_HAS_UNSAVED_CHANGES';\n      payload: { hasUnsavedChanges: boolean };\n    };\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'GO_TO_RELATION':\n      if (state.hasUnsavedChanges && !action.payload.shouldBypassConfirmation) {\n        return { ...state, confirmDialogIntent: action.payload.document };\n      }\n\n      return {\n        ...state,\n        documentHistory: [...state.documentHistory, action.payload.document],\n        confirmDialogIntent: null,\n        isModalOpen: true,\n      };\n    case 'GO_BACK':\n      if (state.hasUnsavedChanges && !action.payload.shouldBypassConfirmation) {\n        return { ...state, confirmDialogIntent: 'back' };\n      }\n\n      return {\n        ...state,\n        documentHistory: state.documentHistory.slice(0, -1),\n        confirmDialogIntent: null,\n      };\n    case 'GO_FULL_PAGE':\n      if (state.hasUnsavedChanges) {\n        return { ...state, confirmDialogIntent: 'navigate' };\n      }\n\n      return {\n        ...state,\n        documentHistory: [],\n        hasUnsavedChanges: false,\n        isModalOpen: false,\n        confirmDialogIntent: null,\n      };\n    case 'CANCEL_CONFIRM_DIALOG':\n      return {\n        ...state,\n        confirmDialogIntent: null,\n      };\n    case 'CLOSE_MODAL':\n      if (state.hasUnsavedChanges && !action.payload.shouldBypassConfirmation) {\n        return { ...state, confirmDialogIntent: 'close' };\n      }\n\n      return {\n        ...state,\n        documentHistory: [],\n        confirmDialogIntent: null,\n        hasUnsavedChanges: false,\n        isModalOpen: false,\n      };\n    case 'SET_HAS_UNSAVED_CHANGES':\n      return {\n        ...state,\n        hasUnsavedChanges: action.payload.hasUnsavedChanges,\n      };\n    default:\n      return state;\n  }\n}\n\ninterface RelationModalContextValue {\n  state: State;\n  dispatch: React.Dispatch<Action>;\n  rootDocumentMeta: DocumentMeta;\n  currentDocumentMeta: DocumentMeta;\n  currentDocument: ReturnType<UseDocument>;\n  onPreview?: () => void;\n}\n\nconst [RelationModalProvider, useRelationModal] =\n  createContext<RelationModalContextValue>('RelationModal');\n\nconst getFullPageUrl = (currentDocumentMeta: DocumentMeta): string => {\n  const isSingleType = currentDocumentMeta.collectionType === SINGLE_TYPES;\n  const queryParams = currentDocumentMeta.params?.locale\n    ? `?plugins[i18n][locale]=${currentDocumentMeta.params.locale}`\n    : '';\n\n  return `/content-manager/${currentDocumentMeta.collectionType}/${currentDocumentMeta.model}${isSingleType ? '' : '/' + currentDocumentMeta.documentId}${queryParams}`;\n};\n\n/**\n * Component responsible of rendering its children wrapped in a modal, form and context if needed\n */\nconst RelationModalRenderer = ({\n  children,\n  trigger,\n  relation,\n}: {\n  children: React.ReactNode;\n  trigger: React.ReactNode;\n  relation: DocumentMeta;\n}) => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n\n  const [state, dispatch] = React.useReducer(reducer, {\n    documentHistory: [],\n    confirmDialogIntent: null,\n    isModalOpen: false,\n    hasUnsavedChanges: false,\n  });\n\n  const rootDocument = useDoc();\n  const [{ query }] = useQueryParams();\n  const params = React.useMemo(() => buildValidParams(query ?? {}), [query]);\n\n  const rootDocumentMeta: DocumentMeta = {\n    documentId: rootDocument.document?.documentId || '',\n    model: rootDocument.model,\n    collectionType: rootDocument.collectionType,\n    params,\n  };\n\n  const currentDocumentMeta = state.documentHistory.at(-1) ?? rootDocumentMeta;\n  const currentDocument = useDocument(currentDocumentMeta);\n\n  const parentContextValue = useRelationModal('RelationContextWrapper', (state) => state, false);\n\n  // A parent relation is already rendering a modal. In this case simply render the trigger\n  if (parentContextValue) {\n    return trigger;\n  }\n\n  /**\n   * There is no parent relation, so the relation modal doesn't exist. Create it and set up all the\n   * pieces that will be used by potential child relations: the context, header, form, and footer.\n   */\n  return (\n    <RelationModalProvider\n      state={state}\n      dispatch={dispatch}\n      rootDocumentMeta={rootDocumentMeta}\n      currentDocumentMeta={currentDocumentMeta}\n      currentDocument={currentDocument}\n    >\n      <Modal.Root\n        open={state.isModalOpen}\n        onOpenChange={(open) => {\n          if (open) {\n            dispatch({\n              type: 'GO_TO_RELATION',\n              payload: { document: relation, shouldBypassConfirmation: false },\n            });\n          } else {\n            dispatch({\n              type: 'CLOSE_MODAL',\n              payload: { shouldBypassConfirmation: false },\n            });\n          }\n        }}\n      >\n        {trigger}\n        <StyledModalContent>\n          <Modal.Header gap={2}>\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n              <Flex gap={2}>\n                <IconButton\n                  withTooltip={false}\n                  label={formatMessage({ id: 'global.back', defaultMessage: 'Back' })}\n                  variant=\"ghost\"\n                  disabled={state.documentHistory.length < 2}\n                  onClick={() => {\n                    dispatch({\n                      type: 'GO_BACK',\n                      payload: { shouldBypassConfirmation: false },\n                    });\n                  }}\n                  marginRight={1}\n                >\n                  <ArrowLeft />\n                </IconButton>\n                <Typography tag=\"span\" fontWeight={600}>\n                  {formatMessage({\n                    id: 'content-manager.components.RelationInputModal.modal-title',\n                    defaultMessage: 'Edit a relation',\n                  })}\n                </Typography>\n              </Flex>\n              <IconButton\n                onClick={() => {\n                  dispatch({\n                    type: 'GO_FULL_PAGE',\n                  });\n                  if (!state.hasUnsavedChanges) {\n                    navigate(getFullPageUrl(currentDocumentMeta));\n                  }\n                }}\n                variant=\"tertiary\"\n                label={formatMessage({\n                  id: 'content-manager.components.RelationInputModal.button-fullpage',\n                  defaultMessage: 'Go to entry',\n                })}\n              >\n                <ArrowsOut />\n              </IconButton>\n            </Flex>\n          </Modal.Header>\n          <Modal.Body>\n            <FormContext\n              method=\"PUT\"\n              initialValues={currentDocument.getInitialFormValues()}\n              validate={(values: Record<string, unknown>, options: Record<string, string>) => {\n                const yupSchema = createYupSchema(\n                  currentDocument.schema?.attributes,\n                  currentDocument.components,\n                  {\n                    status: currentDocument.document?.status,\n                    ...options,\n                  }\n                );\n\n                return yupSchema.validate(values, { abortEarly: false });\n              }}\n            >\n              {children}\n            </FormContext>\n          </Modal.Body>\n        </StyledModalContent>\n      </Modal.Root>\n    </RelationModalProvider>\n  );\n};\n\n/**\n * All the main content (not header and footer) of the relation modal, plus the confirmation dialog.\n * Will be wrapped in a Modal.Body by the RelationModalRenderer.\n * Cannot be moved directly inside RelationModal because it needs access to the context via hooks.\n */\nconst RelationModalBody = () => {\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n  const { formatMessage } = useIntl();\n\n  const [triggerRefetchDocument] = useLazyGetDocumentQuery();\n\n  const state = useRelationModal('RelationModalForm', (state) => state.state);\n  const dispatch = useRelationModal('RelationModalForm', (state) => state.dispatch);\n  const rootDocumentMeta = useRelationModal('RelationModalForm', (state) => state.rootDocumentMeta);\n  const currentDocumentMeta = useRelationModal(\n    'RelationModalForm',\n    (state) => state.currentDocumentMeta\n  );\n\n  /**\n   * One-way sync the modified state from the form to the modal state.\n   * It is needed because we need to consume state from the form context in order to lift it up\n   * into the modal context. It is not possible otherwise because the modal needs the form state,\n   * but it must be a parent of the form.\n   */\n  const modified = useForm('FormWatcher', (state) => state.modified);\n  const isSubmitting = useForm('FormWatcher', (state) => state.isSubmitting);\n  const hasUnsavedChanges = modified && !isSubmitting;\n  React.useEffect(() => {\n    dispatch({ type: 'SET_HAS_UNSAVED_CHANGES', payload: { hasUnsavedChanges } });\n  }, [hasUnsavedChanges, dispatch]);\n\n  const handleCloseModal = (shouldBypassConfirmation: boolean) => {\n    dispatch({ type: 'CLOSE_MODAL', payload: { shouldBypassConfirmation } });\n\n    if (shouldBypassConfirmation || !state.hasUnsavedChanges) {\n      // TODO: check if we can avoid this by relying on RTK invalidatesTags.\n      // If so we can delete this function and dispatch the events directly\n      triggerRefetchDocument(\n        // TODO check if params should be removed (as they were before)\n        rootDocumentMeta,\n        // Favor the cache\n        true\n      );\n    }\n  };\n\n  const handleRedirection = () => {\n    const editViewUrl = `${pathname}${search}`;\n    const fullPageUrl = getFullPageUrl(currentDocumentMeta);\n    const isRootDocumentUrl = editViewUrl.includes(fullPageUrl);\n\n    if (isRootDocumentUrl) {\n      handleCloseModal(true);\n    } else {\n      navigate(fullPageUrl);\n    }\n  };\n\n  const handleConfirm = () => {\n    if (state.confirmDialogIntent === null) {\n      return;\n    }\n    if (state.confirmDialogIntent === 'navigate') {\n      handleRedirection();\n    } else if (state.confirmDialogIntent === 'back') {\n      dispatch({ type: 'GO_BACK', payload: { shouldBypassConfirmation: true } });\n    } else if (state.confirmDialogIntent === 'close') {\n      handleCloseModal(true);\n    } else if ('documentId' in state.confirmDialogIntent) {\n      dispatch({\n        type: 'GO_TO_RELATION',\n        payload: { document: state.confirmDialogIntent, shouldBypassConfirmation: true },\n      });\n    }\n  };\n\n  return (\n    <>\n      <RelationEditView />\n      <Dialog.Root open={state.confirmDialogIntent != null}>\n        <ConfirmDialog\n          onConfirm={() => handleConfirm()}\n          onCancel={() => dispatch({ type: 'CANCEL_CONFIRM_DIALOG' })}\n          variant=\"danger\"\n        >\n          {formatMessage({\n            id: 'content-manager.components.RelationInputModal.confirmation-message',\n            defaultMessage:\n              'Some changes were not saved. Are you sure you want to close this relation? All changes that were not saved will be lost.',\n          })}\n        </ConfirmDialog>\n      </Dialog.Root>\n    </>\n  );\n};\n\nconst ModalTrigger = ({\n  children,\n  relation,\n}: {\n  children: React.ReactNode;\n  relation: DocumentMeta;\n}) => {\n  const dispatch = useRelationModal('ModalTrigger', (state) => state.dispatch);\n\n  return (\n    <StyledTextButton\n      onClick={() => {\n        dispatch({\n          type: 'GO_TO_RELATION',\n          payload: { document: relation, shouldBypassConfirmation: false },\n        });\n      }}\n    >\n      {children}\n    </StyledTextButton>\n  );\n};\n\ninterface RelationModalProps {\n  children: React.ReactNode;\n  relation: DocumentMeta;\n}\n\nconst RelationModal = React.memo(({ relation, children }: RelationModalProps) => {\n  return (\n    <RelationModalRenderer\n      relation={relation}\n      trigger={<ModalTrigger relation={relation}>{children}</ModalTrigger>}\n    >\n      <RelationModalBody />\n    </RelationModalRenderer>\n  );\n});\n\nconst StyledTextButton = styled(TextButton)`\n  max-width: 100%;\n  & > span {\n    font-size: ${({ theme }) => theme.fontSizes[2]};\n    width: inherit;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`;\n\n/**\n * The mini edit view for a relation that is displayed inside a modal.\n * It's complete with its header, document actions and form layout.\n */\nconst RelationEditView = () => {\n  const { formatMessage } = useIntl();\n\n  const currentDocumentMeta = useRelationModal(\n    'RelationModalBody',\n    (state) => state.currentDocumentMeta\n  );\n  const currentDocument = useRelationModal('RelationModalBody', (state) => state.currentDocument);\n  const documentLayoutResponse = useDocumentLayout(currentDocumentMeta.model);\n  const plugins = useStrapiApp('RelationModalBody', (state) => state.plugins);\n\n  const initialValues = currentDocument.getInitialFormValues();\n\n  const {\n    permissions = [],\n    isLoading: isLoadingPermissions,\n    error,\n  } = useRBAC(\n    PERMISSIONS.map((action) => ({\n      action,\n      subject: currentDocumentMeta.model,\n    }))\n  );\n\n  const isLoading =\n    isLoadingPermissions || documentLayoutResponse.isLoading || currentDocument.isLoading;\n\n  if (isLoading && !currentDocument.document?.documentId) {\n    return (\n      <Loader small>\n        {formatMessage({\n          id: 'content-manager.ListViewTable.relation-loading',\n          defaultMessage: 'Relations are loading',\n        })}\n      </Loader>\n    );\n  }\n\n  if (\n    error ||\n    !currentDocumentMeta.model ||\n    documentLayoutResponse.error ||\n    !currentDocument.document ||\n    !currentDocument.meta ||\n    !currentDocument.schema ||\n    !initialValues\n  ) {\n    return (\n      <Flex alignItems=\"center\" height=\"100%\" justifyContent=\"center\">\n        <EmptyStateLayout\n          icon={<WarningCircle width=\"16rem\" />}\n          content={formatMessage({\n            id: 'anErrorOccurred',\n            defaultMessage: 'Whoops! Something went wrong. Please, try again.',\n          })}\n        />\n      </Flex>\n    );\n  }\n\n  const documentTitle = currentDocument.getTitle(documentLayoutResponse.edit.settings.mainField);\n  const hasDraftAndPublished = currentDocument.schema?.options?.draftAndPublish ?? false;\n\n  const props = {\n    activeTab: 'draft',\n    collectionType: currentDocumentMeta.collectionType,\n    model: currentDocumentMeta.model,\n    documentId: currentDocumentMeta.documentId,\n    document: currentDocument.document,\n    meta: currentDocument.meta,\n  } satisfies DocumentActionProps;\n\n  return (\n    <DocumentRBAC permissions={permissions} model={currentDocumentMeta.model}>\n      <Flex alignItems=\"flex-start\" direction=\"column\" gap={2}>\n        <Flex width=\"100%\" justifyContent=\"space-between\" gap={2}>\n          <Typography tag=\"h2\" variant=\"alpha\">\n            {documentTitle}\n          </Typography>\n          <Flex gap={2}>\n            <DescriptionComponentRenderer\n              props={props}\n              descriptions={(\n                plugins['content-manager'].apis as ContentManagerPlugin['config']['apis']\n              ).getDocumentActions('relation-modal')}\n            >\n              {(actions) => {\n                const filteredActions = actions.filter((action) => {\n                  return [action.position].flat().includes('relation-modal');\n                });\n                const [primaryAction, secondaryAction] = filteredActions;\n\n                if (!primaryAction && !secondaryAction) return null;\n\n                // Both actions are available when draft and publish enabled\n                if (primaryAction && secondaryAction) {\n                  return (\n                    <>\n                      {/* Save */}\n                      <DocumentActionButton\n                        {...secondaryAction}\n                        variant={secondaryAction.variant || 'secondary'}\n                      />\n                      {/* Publish */}\n                      <DocumentActionButton\n                        {...primaryAction}\n                        variant={primaryAction.variant || 'default'}\n                      />\n                    </>\n                  );\n                }\n\n                // Otherwise we just have the save action\n                return (\n                  <DocumentActionButton\n                    {...primaryAction}\n                    variant={primaryAction.variant || 'secondary'}\n                  />\n                );\n              }}\n            </DescriptionComponentRenderer>\n          </Flex>\n        </Flex>\n        {hasDraftAndPublished ? (\n          <Box>\n            <DocumentStatus status={currentDocument.document?.status} />\n          </Box>\n        ) : null}\n      </Flex>\n\n      <Flex flex={1} overflow=\"auto\" alignItems=\"stretch\" paddingTop={7}>\n        <Box overflow=\"auto\" flex={1}>\n          <FormLayout\n            layout={documentLayoutResponse.edit.layout}\n            document={currentDocument}\n            hasBackground={false}\n          />\n        </Box>\n      </Flex>\n    </DocumentRBAC>\n  );\n};\n\nexport { RelationModal, reducer, useRelationModal };\nexport type { State, Action };\n"],"names":["getCollectionType","url","regex","RegExp","COLLECTION_TYPES","SINGLE_TYPES","match","undefined","StyledModalContent","styled","Modal","Content","reducer","state","action","type","hasUnsavedChanges","payload","shouldBypassConfirmation","confirmDialogIntent","document","documentHistory","isModalOpen","slice","RelationModalProvider","useRelationModal","createContext","getFullPageUrl","currentDocumentMeta","isSingleType","collectionType","queryParams","params","locale","model","documentId","RelationModalRenderer","children","trigger","relation","formatMessage","useIntl","navigate","useNavigate","dispatch","React","useReducer","rootDocument","useDoc","query","useQueryParams","useMemo","buildValidParams","rootDocumentMeta","at","currentDocument","useDocument","parentContextValue","_jsx","_jsxs","Root","open","onOpenChange","Header","gap","Flex","justifyContent","alignItems","width","IconButton","withTooltip","label","id","defaultMessage","variant","disabled","length","onClick","marginRight","ArrowLeft","Typography","tag","fontWeight","ArrowsOut","Body","FormContext","method","initialValues","getInitialFormValues","validate","values","options","yupSchema","createYupSchema","schema","attributes","components","status","abortEarly","RelationModalBody","pathname","search","useLocation","triggerRefetchDocument","useLazyGetDocumentQuery","modified","useForm","isSubmitting","useEffect","handleCloseModal","handleRedirection","editViewUrl","fullPageUrl","isRootDocumentUrl","includes","handleConfirm","_Fragment","RelationEditView","Dialog","ConfirmDialog","onConfirm","onCancel","ModalTrigger","StyledTextButton","RelationModal","memo","TextButton","theme","fontSizes","documentLayoutResponse","useDocumentLayout","plugins","useStrapiApp","permissions","isLoading","isLoadingPermissions","error","useRBAC","PERMISSIONS","map","subject","Loader","small","meta","height","EmptyStateLayout","icon","WarningCircle","content","documentTitle","getTitle","edit","settings","mainField","hasDraftAndPublished","draftAndPublish","props","activeTab","DocumentRBAC","direction","DescriptionComponentRenderer","descriptions","apis","getDocumentActions","actions","filteredActions","filter","position","flat","primaryAction","secondaryAction","DocumentActionButton","Box","DocumentStatus","flex","overflow","paddingTop","FormLayout","layout","hasBackground"],"mappings":"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"}