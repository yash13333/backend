{"version":3,"file":"settings.mjs","sources":["../../../server/controllers/settings.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst { ValidationError } = require('@strapi/utils').errors;\nconst { getService } = require('../utils');\nconst { isValidEmailTemplate } = require('./validation/email-template');\n\nmodule.exports = {\n  async getEmailTemplate(ctx) {\n    ctx.send(await strapi.store({ type: 'plugin', name: 'users-permissions', key: 'email' }).get());\n  },\n\n  async updateEmailTemplate(ctx) {\n    if (_.isEmpty(ctx.request.body)) {\n      throw new ValidationError('Request body cannot be empty');\n    }\n\n    const emailTemplates = ctx.request.body['email-templates'];\n\n    for (const key of Object.keys(emailTemplates)) {\n      const template = emailTemplates[key].options.message;\n\n      if (!isValidEmailTemplate(template)) {\n        throw new ValidationError('Invalid template');\n      }\n    }\n\n    await strapi\n      .store({ type: 'plugin', name: 'users-permissions', key: 'email' })\n      .set({ value: emailTemplates });\n\n    ctx.send({ ok: true });\n  },\n\n  async getAdvancedSettings(ctx) {\n    const settings = await strapi\n      .store({ type: 'plugin', name: 'users-permissions', key: 'advanced' })\n      .get();\n\n    const roles = await getService('role').find();\n\n    ctx.send({ settings, roles });\n  },\n\n  async updateAdvancedSettings(ctx) {\n    if (_.isEmpty(ctx.request.body)) {\n      throw new ValidationError('Request body cannot be empty');\n    }\n\n    await strapi\n      .store({ type: 'plugin', name: 'users-permissions', key: 'advanced' })\n      .set({ value: ctx.request.body });\n\n    ctx.send({ ok: true });\n  },\n\n  async getProviders(ctx) {\n    const providers = await strapi\n      .store({ type: 'plugin', name: 'users-permissions', key: 'grant' })\n      .get();\n\n    for (const provider in providers) {\n      if (provider !== 'email') {\n        providers[provider].redirectUri = strapi\n          .plugin('users-permissions')\n          .service('providers')\n          .buildRedirectUri(provider);\n      }\n    }\n\n    ctx.send(providers);\n  },\n\n  async updateProviders(ctx) {\n    if (_.isEmpty(ctx.request.body)) {\n      throw new ValidationError('Request body cannot be empty');\n    }\n\n    await strapi\n      .store({ type: 'plugin', name: 'users-permissions', key: 'grant' })\n      .set({ value: ctx.request.body.providers });\n\n    ctx.send({ ok: true });\n  },\n};\n"],"names":["_","require$$0","ValidationError","require$$1","errors","getService","require$$2","isValidEmailTemplate","require$$3","settings","getEmailTemplate","ctx","send","strapi","store","type","name","key","get","updateEmailTemplate","isEmpty","request","body","emailTemplates","Object","keys","template","options","message","set","value","ok","getAdvancedSettings","roles","find","updateAdvancedSettings","getProviders","providers","provider","redirectUri","plugin","service","buildRedirectUri","updateProviders"],"mappings":"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"}