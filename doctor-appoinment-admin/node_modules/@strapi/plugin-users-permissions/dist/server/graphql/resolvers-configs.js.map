{"version":3,"file":"resolvers-configs.js","sources":["../../../server/graphql/resolvers-configs.js"],"sourcesContent":["'use strict';\n\nconst userUID = 'plugin::users-permissions.user';\nconst roleUID = 'plugin::users-permissions.role';\n\nmodule.exports = ({ strapi }) => {\n  const { naming } = strapi.plugin('graphql').service('utils');\n\n  const user = strapi.getModel(userUID);\n  const role = strapi.getModel(roleUID);\n\n  const createRole = naming.getCreateMutationTypeName(role);\n  const updateRole = naming.getUpdateMutationTypeName(role);\n  const deleteRole = naming.getDeleteMutationTypeName(role);\n  const createUser = naming.getCreateMutationTypeName(user);\n  const updateUser = naming.getUpdateMutationTypeName(user);\n  const deleteUser = naming.getDeleteMutationTypeName(user);\n\n  return {\n    // Disabled auth for some operations\n    'Mutation.login': { auth: false },\n    'Mutation.register': { auth: false },\n    'Mutation.forgotPassword': { auth: false },\n    'Mutation.resetPassword': { auth: false },\n    'Mutation.emailConfirmation': { auth: false },\n    'Mutation.changePassword': {\n      auth: {\n        scope: 'plugin::users-permissions.auth.changePassword',\n      },\n    },\n\n    // Scoped auth for replaced CRUD operations\n    // Role\n    [`Mutation.${createRole}`]: { auth: { scope: [`${roleUID}.createRole`] } },\n    [`Mutation.${updateRole}`]: { auth: { scope: [`${roleUID}.updateRole`] } },\n    [`Mutation.${deleteRole}`]: { auth: { scope: [`${roleUID}.deleteRole`] } },\n    // User\n    [`Mutation.${createUser}`]: { auth: { scope: [`${userUID}.create`] } },\n    [`Mutation.${updateUser}`]: { auth: { scope: [`${userUID}.update`] } },\n    [`Mutation.${deleteUser}`]: { auth: { scope: [`${userUID}.destroy`] } },\n  };\n};\n"],"names":["userUID","roleUID","resolversConfigs","strapi","naming","plugin","service","user","getModel","role","createRole","getCreateMutationTypeName","updateRole","getUpdateMutationTypeName","deleteRole","getDeleteMutationTypeName","createUser","updateUser","deleteUser","auth","scope"],"mappings":";;;;;;;AAEA,IAAA,MAAMA,OAAU,GAAA,gCAAA;AAChB,IAAA,MAAMC,OAAU,GAAA,gCAAA;IAEhBC,gBAAiB,GAAA,CAAC,EAAEC,MAAM,EAAE,GAAA;QAC1B,MAAM,EAAEC,MAAM,EAAE,GAAGD,OAAOE,MAAM,CAAC,SAAWC,CAAAA,CAAAA,OAAO,CAAC,OAAA,CAAA;QAEpD,MAAMC,IAAAA,GAAOJ,MAAOK,CAAAA,QAAQ,CAACR,OAAAA,CAAAA;QAC7B,MAAMS,IAAAA,GAAON,MAAOK,CAAAA,QAAQ,CAACP,OAAAA,CAAAA;QAE7B,MAAMS,UAAAA,GAAaN,MAAOO,CAAAA,yBAAyB,CAACF,IAAAA,CAAAA;QACpD,MAAMG,UAAAA,GAAaR,MAAOS,CAAAA,yBAAyB,CAACJ,IAAAA,CAAAA;QACpD,MAAMK,UAAAA,GAAaV,MAAOW,CAAAA,yBAAyB,CAACN,IAAAA,CAAAA;QACpD,MAAMO,UAAAA,GAAaZ,MAAOO,CAAAA,yBAAyB,CAACJ,IAAAA,CAAAA;QACpD,MAAMU,UAAAA,GAAab,MAAOS,CAAAA,yBAAyB,CAACN,IAAAA,CAAAA;QACpD,MAAMW,UAAAA,GAAad,MAAOW,CAAAA,yBAAyB,CAACR,IAAAA,CAAAA;QAEpD,OAAO;;YAEL,gBAAkB,EAAA;gBAAEY,IAAM,EAAA;AAAO,aAAA;YACjC,mBAAqB,EAAA;gBAAEA,IAAM,EAAA;AAAO,aAAA;YACpC,yBAA2B,EAAA;gBAAEA,IAAM,EAAA;AAAO,aAAA;YAC1C,wBAA0B,EAAA;gBAAEA,IAAM,EAAA;AAAO,aAAA;YACzC,4BAA8B,EAAA;gBAAEA,IAAM,EAAA;AAAO,aAAA;YAC7C,yBAA2B,EAAA;gBACzBA,IAAM,EAAA;oBACJC,KAAO,EAAA;AACR;AACF,aAAA;;;AAID,YAAA,CAAC,CAAC,SAAS,EAAEV,UAAW,CAAA,CAAC,GAAG;gBAAES,IAAM,EAAA;oBAAEC,KAAO,EAAA;wBAAC,CAAC,EAAEnB,OAAQ,CAAA,WAAW;AAAE;AAAA;AAAI,aAAA;AAC1E,YAAA,CAAC,CAAC,SAAS,EAAEW,UAAW,CAAA,CAAC,GAAG;gBAAEO,IAAM,EAAA;oBAAEC,KAAO,EAAA;wBAAC,CAAC,EAAEnB,OAAQ,CAAA,WAAW;AAAE;AAAA;AAAI,aAAA;AAC1E,YAAA,CAAC,CAAC,SAAS,EAAEa,UAAW,CAAA,CAAC,GAAG;gBAAEK,IAAM,EAAA;oBAAEC,KAAO,EAAA;wBAAC,CAAC,EAAEnB,OAAQ,CAAA,WAAW;AAAE;AAAA;AAAI,aAAA;;AAE1E,YAAA,CAAC,CAAC,SAAS,EAAEe,UAAW,CAAA,CAAC,GAAG;gBAAEG,IAAM,EAAA;oBAAEC,KAAO,EAAA;wBAAC,CAAC,EAAEpB,OAAQ,CAAA,OAAO;AAAE;AAAA;AAAI,aAAA;AACtE,YAAA,CAAC,CAAC,SAAS,EAAEiB,UAAW,CAAA,CAAC,GAAG;gBAAEE,IAAM,EAAA;oBAAEC,KAAO,EAAA;wBAAC,CAAC,EAAEpB,OAAQ,CAAA,OAAO;AAAE;AAAA;AAAI,aAAA;AACtE,YAAA,CAAC,CAAC,SAAS,EAAEkB,UAAW,CAAA,CAAC,GAAG;gBAAEC,IAAM,EAAA;oBAAEC,KAAO,EAAA;wBAAC,CAAC,EAAEpB,OAAQ,CAAA,QAAQ;AAAE;AAAA;AAAI;AAC3E,SAAA;AACA,KAAA;;;;;;"}