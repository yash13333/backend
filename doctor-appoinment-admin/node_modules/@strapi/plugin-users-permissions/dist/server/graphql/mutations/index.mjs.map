{"version":3,"file":"index.mjs","sources":["../../../../server/graphql/mutations/index.js"],"sourcesContent":["'use strict';\n\nconst userUID = 'plugin::users-permissions.user';\nconst roleUID = 'plugin::users-permissions.role';\n\nmodule.exports = (context) => {\n  const { nexus, strapi } = context;\n\n  const { naming } = strapi.plugin('graphql').service('utils');\n\n  const user = strapi.getModel(userUID);\n  const role = strapi.getModel(roleUID);\n\n  const mutations = {\n    // CRUD (user & role)\n    [naming.getCreateMutationTypeName(role)]: require('./crud/role/create-role'),\n    [naming.getUpdateMutationTypeName(role)]: require('./crud/role/update-role'),\n    [naming.getDeleteMutationTypeName(role)]: require('./crud/role/delete-role'),\n    [naming.getCreateMutationTypeName(user)]: require('./crud/user/create-user'),\n    [naming.getUpdateMutationTypeName(user)]: require('./crud/user/update-user'),\n    [naming.getDeleteMutationTypeName(user)]: require('./crud/user/delete-user'),\n\n    // Other mutations\n    login: require('./auth/login'),\n    register: require('./auth/register'),\n    forgotPassword: require('./auth/forgot-password'),\n    resetPassword: require('./auth/reset-password'),\n    changePassword: require('./auth/change-password'),\n    emailConfirmation: require('./auth/email-confirmation'),\n  };\n\n  return nexus.extendType({\n    type: 'Mutation',\n\n    definition(t) {\n      for (const [name, getConfig] of Object.entries(mutations)) {\n        const config = getConfig(context);\n\n        t.field(name, config);\n      }\n    },\n  });\n};\n"],"names":["userUID","roleUID","mutations","context","nexus","strapi","naming","plugin","service","user","getModel","role","getCreateMutationTypeName","require$$0","getUpdateMutationTypeName","require$$1","getDeleteMutationTypeName","require$$2","require$$3","require$$4","require$$5","login","require$$6","register","require$$7","forgotPassword","require$$8","resetPassword","require$$9","changePassword","require$$10","emailConfirmation","require$$11","extendType","type","definition","t","name","getConfig","Object","entries","config","field"],"mappings":";;;;;;;;;;;;;;;;;;AAEA,IAAA,MAAMA,OAAU,GAAA,gCAAA;AAChB,IAAA,MAAMC,OAAU,GAAA,gCAAA;AAEFC,IAAAA,SAAAA,GAAG,CAACC,OAAAA,GAAAA;AAChB,QAAA,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAE,GAAGF,OAAAA;QAE1B,MAAM,EAAEG,MAAM,EAAE,GAAGD,OAAOE,MAAM,CAAC,SAAWC,CAAAA,CAAAA,OAAO,CAAC,OAAA,CAAA;QAEpD,MAAMC,IAAAA,GAAOJ,MAAOK,CAAAA,QAAQ,CAACV,OAAAA,CAAAA;QAC7B,MAAMW,IAAAA,GAAON,MAAOK,CAAAA,QAAQ,CAACT,OAAAA,CAAAA;AAE7B,QAAA,MAAMC,SAAY,GAAA;;AAEhB,YAAA,CAACI,MAAOM,CAAAA,yBAAyB,CAACD,IAAAA,CAAAA,GAAQE,iBAAAA,EAAAA;AAC1C,YAAA,CAACP,MAAOQ,CAAAA,yBAAyB,CAACH,IAAAA,CAAAA,GAAQI,iBAAAA,EAAAA;AAC1C,YAAA,CAACT,MAAOU,CAAAA,yBAAyB,CAACL,IAAAA,CAAAA,GAAQM,iBAAAA,EAAAA;AAC1C,YAAA,CAACX,MAAOM,CAAAA,yBAAyB,CAACH,IAAAA,CAAAA,GAAQS,iBAAAA,EAAAA;AAC1C,YAAA,CAACZ,MAAOQ,CAAAA,yBAAyB,CAACL,IAAAA,CAAAA,GAAQU,iBAAAA,EAAAA;AAC1C,YAAA,CAACb,MAAOU,CAAAA,yBAAyB,CAACP,IAAAA,CAAAA,GAAQW,iBAAAA,EAAAA;;YAG1CC,KAAOC,EAAAA,YAAAA,EAAAA;YACPC,QAAUC,EAAAA,eAAAA,EAAAA;YACVC,cAAgBC,EAAAA,qBAAAA,EAAAA;YAChBC,aAAeC,EAAAA,oBAAAA,EAAAA;YACfC,cAAgBC,EAAAA,qBAAAA,EAAAA;YAChBC,iBAAmBC,EAAAA,wBAAAA;AACvB,SAAA;QAEE,OAAO5B,KAAAA,CAAM6B,UAAU,CAAC;YACtBC,IAAM,EAAA,UAAA;AAENC,YAAAA,UAAAA,CAAAA,CAAWC,CAAC,EAAA;gBACV,KAAK,MAAM,CAACC,IAAMC,EAAAA,SAAAA,CAAU,IAAIC,MAAOC,CAAAA,OAAO,CAACtC,SAAY,CAAA,CAAA;AACzD,oBAAA,MAAMuC,SAASH,SAAUnC,CAAAA,OAAAA,CAAAA;oBAEzBiC,CAAEM,CAAAA,KAAK,CAACL,IAAMI,EAAAA,MAAAA,CAAAA;AACf;AACF;AACL,SAAA,CAAA;AACA,KAAA;;;;;;"}