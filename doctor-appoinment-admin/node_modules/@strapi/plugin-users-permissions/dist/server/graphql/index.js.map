{"version":3,"file":"index.js","sources":["../../../server/graphql/index.js"],"sourcesContent":["'use strict';\n\nconst getTypes = require('./types');\nconst getQueries = require('./queries');\nconst getMutations = require('./mutations');\nconst getResolversConfig = require('./resolvers-configs');\n\nmodule.exports = ({ strapi }) => {\n  const { config: graphQLConfig } = strapi.plugin('graphql');\n  const extensionService = strapi.plugin('graphql').service('extension');\n\n  const isShadowCRUDEnabled = graphQLConfig('shadowCRUD', true);\n\n  if (!isShadowCRUDEnabled) {\n    return;\n  }\n\n  // Disable Permissions queries & mutations but allow the\n  // type to be used/selected in filters or nested resolvers\n  extensionService\n    .shadowCRUD('plugin::users-permissions.permission')\n    .disableQueries()\n    .disableMutations();\n\n  // Disable User & Role's Create/Update/Delete actions so they can be replaced\n  const actionsToDisable = ['create', 'update', 'delete'];\n\n  extensionService.shadowCRUD('plugin::users-permissions.user').disableActions(actionsToDisable);\n  extensionService.shadowCRUD('plugin::users-permissions.role').disableActions(actionsToDisable);\n\n  // Register new types & resolvers config\n  extensionService.use(({ nexus }) => {\n    const types = getTypes({ strapi, nexus });\n    const queries = getQueries({ strapi, nexus });\n    const mutations = getMutations({ strapi, nexus });\n    const resolversConfig = getResolversConfig({ strapi });\n\n    return {\n      types: [types, queries, mutations],\n\n      resolversConfig,\n    };\n  });\n};\n"],"names":["getTypes","require$$0","getQueries","require$$1","getMutations","require$$2","getResolversConfig","require$$3","graphql","strapi","config","graphQLConfig","plugin","extensionService","service","isShadowCRUDEnabled","shadowCRUD","disableQueries","disableMutations","actionsToDisable","disableActions","use","nexus","types","queries","mutations","resolversConfig"],"mappings":";;;;;;;;;;;;AAEA,IAAA,MAAMA,QAAWC,GAAAA,eAAAA,EAAAA;AACjB,IAAA,MAAMC,UAAaC,GAAAA,iBAAAA,EAAAA;AACnB,IAAA,MAAMC,YAAeC,GAAAA,iBAAAA,EAAAA;AACrB,IAAA,MAAMC,kBAAqBC,GAAAA,0BAAAA,EAAAA;IAE3BC,OAAiB,GAAA,CAAC,EAAEC,MAAM,EAAE,GAAA;AAC1B,QAAA,MAAM,EAAEC,MAAQC,EAAAA,aAAa,EAAE,GAAGF,MAAAA,CAAOG,MAAM,CAAC,SAAA,CAAA;AAChD,QAAA,MAAMC,mBAAmBJ,MAAOG,CAAAA,MAAM,CAAC,SAAA,CAAA,CAAWE,OAAO,CAAC,WAAA,CAAA;QAE1D,MAAMC,mBAAAA,GAAsBJ,cAAc,YAAc,EAAA,IAAA,CAAA;AAExD,QAAA,IAAI,CAACI,mBAAqB,EAAA;AACxB,YAAA;AACD;;;AAIDF,QAAAA,gBAAAA,CACGG,UAAU,CAAC,sCACXC,CAAAA,CAAAA,cAAc,GACdC,gBAAgB,EAAA;;AAGnB,QAAA,MAAMC,gBAAmB,GAAA;AAAC,YAAA,QAAA;AAAU,YAAA,QAAA;AAAU,YAAA;AAAS,SAAA;AAEvDN,QAAAA,gBAAAA,CAAiBG,UAAU,CAAC,gCAAkCI,CAAAA,CAAAA,cAAc,CAACD,gBAAAA,CAAAA;AAC7EN,QAAAA,gBAAAA,CAAiBG,UAAU,CAAC,gCAAkCI,CAAAA,CAAAA,cAAc,CAACD,gBAAAA,CAAAA;;AAG7EN,QAAAA,gBAAAA,CAAiBQ,GAAG,CAAC,CAAC,EAAEC,KAAK,EAAE,GAAA;AAC7B,YAAA,MAAMC,QAAQvB,QAAS,CAAA;AAAES,gBAAAA,MAAAA;AAAQa,gBAAAA;AAAO,aAAA,CAAA;AACxC,YAAA,MAAME,UAAUtB,UAAW,CAAA;AAAEO,gBAAAA,MAAAA;AAAQa,gBAAAA;AAAO,aAAA,CAAA;AAC5C,YAAA,MAAMG,YAAYrB,YAAa,CAAA;AAAEK,gBAAAA,MAAAA;AAAQa,gBAAAA;AAAO,aAAA,CAAA;AAChD,YAAA,MAAMI,kBAAkBpB,kBAAmB,CAAA;AAAEG,gBAAAA;AAAQ,aAAA,CAAA;YAErD,OAAO;gBACLc,KAAO,EAAA;AAACA,oBAAAA,KAAAA;AAAOC,oBAAAA,OAAAA;AAASC,oBAAAA;AAAU,iBAAA;AAElCC,gBAAAA;AACN,aAAA;AACA,SAAA,CAAA;AACA,KAAA;;;;;;"}