{"version":3,"file":"TableBody.js","sources":["../../../../../../../admin/src/pages/Roles/pages/ListPage/components/TableBody.jsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Flex, IconButton, Link, Tbody, Td, Tr, Typography } from '@strapi/design-system';\nimport { Pencil, Trash } from '@strapi/icons';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nconst EditLink = styled(Link)`\n  align-items: center;\n  height: 3.2rem;\n  width: 3.2rem;\n  display: flex;\n  justify-content: center;\n  padding: ${({ theme }) => `${theme.spaces[2]}`};\n\n  svg {\n    height: 1.6rem;\n    width: 1.6rem;\n\n    path {\n      fill: ${({ theme }) => theme.colors.neutral500};\n    }\n  }\n\n  &:hover,\n  &:focus {\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.neutral800};\n      }\n    }\n  }\n`;\n\nconst TableBody = ({ sortedRoles, canDelete, canUpdate, setRoleToDelete, onDelete }) => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const [showConfirmDelete, setShowConfirmDelete] = onDelete;\n\n  const checkCanDeleteRole = (role) =>\n    canDelete && !['public', 'authenticated'].includes(role.type);\n\n  const handleClickDelete = (id) => {\n    setRoleToDelete(id);\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  return (\n    <Tbody>\n      {sortedRoles?.map((role) => (\n        <Tr cursor=\"pointer\" key={role.name} onClick={() => navigate(role.id.toString())}>\n          <Td width=\"20%\">\n            <Typography>{role.name}</Typography>\n          </Td>\n          <Td width=\"50%\">\n            <Typography>{role.description}</Typography>\n          </Td>\n          <Td width=\"30%\">\n            <Typography>\n              {formatMessage(\n                {\n                  id: 'Roles.RoleRow.user-count',\n                  defaultMessage: '{number, plural, =0 {# user} one {# user} other {# users}}',\n                },\n                { number: role.nb_users }\n              )}\n            </Typography>\n          </Td>\n          <Td>\n            <Flex justifyContent=\"end\" onClick={(e) => e.stopPropagation()}>\n              {canUpdate ? (\n                <EditLink\n                  tag={NavLink}\n                  to={role.id.toString()}\n                  aria-label={formatMessage(\n                    { id: 'app.component.table.edit', defaultMessage: 'Edit {target}' },\n                    { target: `${role.name}` }\n                  )}\n                >\n                  <Pencil />\n                </EditLink>\n              ) : null}\n\n              {checkCanDeleteRole(role) && (\n                <IconButton\n                  onClick={() => handleClickDelete(role.id.toString())}\n                  variant=\"ghost\"\n                  label={formatMessage(\n                    { id: 'global.delete-target', defaultMessage: 'Delete {target}' },\n                    { target: `${role.name}` }\n                  )}\n                >\n                  <Trash />\n                </IconButton>\n              )}\n            </Flex>\n          </Td>\n        </Tr>\n      ))}\n    </Tbody>\n  );\n};\n\nexport default TableBody;\n\nTableBody.defaultProps = {\n  canDelete: false,\n  canUpdate: false,\n};\n\nTableBody.propTypes = {\n  onDelete: PropTypes.array.isRequired,\n  setRoleToDelete: PropTypes.func.isRequired,\n  sortedRoles: PropTypes.array.isRequired,\n  canDelete: PropTypes.bool,\n  canUpdate: PropTypes.bool,\n};\n"],"names":["EditLink","styled","Link","theme","spaces","colors","neutral500","neutral800","TableBody","sortedRoles","canDelete","canUpdate","setRoleToDelete","onDelete","formatMessage","useIntl","navigate","useNavigate","showConfirmDelete","setShowConfirmDelete","checkCanDeleteRole","role","includes","type","handleClickDelete","id","_jsx","Tbody","map","_jsxs","Tr","cursor","onClick","toString","Td","width","Typography","name","description","defaultMessage","number","nb_users","Flex","justifyContent","e","stopPropagation","tag","NavLink","to","aria-label","target","Pencil","IconButton","variant","label","Trash","defaultProps","propTypes","PropTypes","array","isRequired","func","bool"],"mappings":"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"}