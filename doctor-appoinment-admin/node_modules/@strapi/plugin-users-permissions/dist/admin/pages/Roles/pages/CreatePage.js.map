{"version":3,"file":"CreatePage.js","sources":["../../../../../admin/src/pages/Roles/pages/CreatePage.jsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Button,\n  Flex,\n  Grid,\n  Main,\n  Textarea,\n  TextInput,\n  Typography,\n  Field,\n} from '@strapi/design-system';\nimport { Check } from '@strapi/icons';\nimport { Page, useTracking, useNotification, useFetchClient, Layouts } from '@strapi/strapi/admin';\nimport { Formik, Form } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useMutation } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\n\nimport UsersPermissions from '../../../components/UsersPermissions';\nimport { PERMISSIONS } from '../../../constants';\nimport getTrad from '../../../utils/getTrad';\nimport { createRoleSchema } from '../constants';\nimport { usePlugins } from '../hooks/usePlugins';\n\nexport const CreatePage = () => {\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const navigate = useNavigate();\n  const { isLoading: isLoadingPlugins, permissions, routes } = usePlugins();\n  const { trackUsage } = useTracking();\n  const permissionsRef = React.useRef();\n  const { post } = useFetchClient();\n  const mutation = useMutation((body) => post(`/users-permissions/roles`, body), {\n    onError() {\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({\n          id: 'notification.error',\n          defaultMessage: 'An error occurred',\n        }),\n      });\n    },\n\n    onSuccess() {\n      trackUsage('didCreateRole');\n\n      toggleNotification({\n        type: 'success',\n        message: formatMessage({\n          id: getTrad('Settings.roles.created'),\n          defaultMessage: 'Role created',\n        }),\n      });\n\n      // Forcing redirecting since we don't have the id in the response\n      navigate(-1);\n    },\n  });\n\n  const handleCreateRoleSubmit = async (data) => {\n    // TODO: refactor. Child -> parent component communication is evil;\n    // We should either move the provider one level up or move the state\n    // straight into redux.\n    const permissions = permissionsRef.current.getPermissions();\n\n    await mutation.mutate({ ...data, ...permissions, users: [] });\n  };\n\n  return (\n    <Main>\n      <Page.Title>\n        {formatMessage(\n          { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\n          { name: 'Roles' }\n        )}\n      </Page.Title>\n      <Formik\n        enableReinitialize\n        initialValues={{ name: '', description: '' }}\n        onSubmit={handleCreateRoleSubmit}\n        validationSchema={createRoleSchema}\n      >\n        {({ handleSubmit, values, handleChange, errors }) => (\n          <Form noValidate onSubmit={handleSubmit}>\n            <Layouts.Header\n              primaryAction={\n                !isLoadingPlugins && (\n                  <Button type=\"submit\" loading={mutation.isLoading} startIcon={<Check />}>\n                    {formatMessage({\n                      id: 'global.save',\n                      defaultMessage: 'Save',\n                    })}\n                  </Button>\n                )\n              }\n              title={formatMessage({\n                id: 'Settings.roles.create.title',\n                defaultMessage: 'Create a role',\n              })}\n              subtitle={formatMessage({\n                id: 'Settings.roles.create.description',\n                defaultMessage: 'Define the rights given to the role',\n              })}\n            />\n            <Layouts.Content>\n              <Flex\n                background=\"neutral0\"\n                direction=\"column\"\n                alignItems=\"stretch\"\n                gap={7}\n                hasRadius\n                paddingTop={6}\n                paddingBottom={6}\n                paddingLeft={7}\n                paddingRight={7}\n                shadow=\"filterShadow\"\n              >\n                <Flex direction=\"column\" alignItems=\"stretch\">\n                  <Typography variant=\"delta\" tag=\"h2\">\n                    {formatMessage({\n                      id: getTrad('EditPage.form.roles'),\n                      defaultMessage: 'Role details',\n                    })}\n                  </Typography>\n\n                  <Grid.Root gap={4}>\n                    <Grid.Item col={6} direction=\"column\" alignItems=\"stretch\">\n                      <Field.Root\n                        name=\"name\"\n                        error={\n                          errors?.name\n                            ? formatMessage({ id: errors.name, defaultMessage: 'Name is required' })\n                            : false\n                        }\n                        required\n                      >\n                        <Field.Label>\n                          {formatMessage({\n                            id: 'global.name',\n                            defaultMessage: 'Name',\n                          })}\n                        </Field.Label>\n                        <TextInput value={values.name || ''} onChange={handleChange} />\n                        <Field.Error />\n                      </Field.Root>\n                    </Grid.Item>\n                    <Grid.Item col={6} direction=\"column\" alignItems=\"stretch\">\n                      <Field.Root\n                        name=\"description\"\n                        error={\n                          errors?.description\n                            ? formatMessage({\n                                id: errors.description,\n                                defaultMessage: 'Description is required',\n                              })\n                            : false\n                        }\n                        required\n                      >\n                        <Field.Label>\n                          {formatMessage({\n                            id: 'global.description',\n                            defaultMessage: 'Description',\n                          })}\n                        </Field.Label>\n                        <Textarea value={values.description || ''} onChange={handleChange} />\n                        <Field.Error />\n                      </Field.Root>\n                    </Grid.Item>\n                  </Grid.Root>\n                </Flex>\n\n                {!isLoadingPlugins && (\n                  <UsersPermissions\n                    ref={permissionsRef}\n                    permissions={permissions}\n                    routes={routes}\n                  />\n                )}\n              </Flex>\n            </Layouts.Content>\n          </Form>\n        )}\n      </Formik>\n    </Main>\n  );\n};\n\nexport const ProtectedRolesCreatePage = () => (\n  <Page.Protect permissions={PERMISSIONS.createRole}>\n    <CreatePage />\n  </Page.Protect>\n);\n"],"names":["CreatePage","formatMessage","useIntl","toggleNotification","useNotification","navigate","useNavigate","isLoading","isLoadingPlugins","permissions","routes","usePlugins","trackUsage","useTracking","permissionsRef","React","useRef","post","useFetchClient","mutation","useMutation","body","onError","type","message","id","defaultMessage","onSuccess","getTrad","handleCreateRoleSubmit","data","current","getPermissions","mutate","users","_jsxs","Main","_jsx","Page","Title","name","Formik","enableReinitialize","initialValues","description","onSubmit","validationSchema","createRoleSchema","handleSubmit","values","handleChange","errors","Form","noValidate","Layouts","Header","primaryAction","Button","loading","startIcon","Check","title","subtitle","Content","Flex","background","direction","alignItems","gap","hasRadius","paddingTop","paddingBottom","paddingLeft","paddingRight","shadow","Typography","variant","tag","Grid","Root","Item","col","Field","error","required","Label","TextInput","value","onChange","Error","Textarea","UsersPermissions","ref","ProtectedRolesCreatePage","Protect","PERMISSIONS","createRole"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyBaA,UAAa,GAAA,IAAA;IACxB,MAAM,EAAEC,aAAa,EAAE,GAAGC,iBAAAA,EAAAA;IAC1B,MAAM,EAAEC,kBAAkB,EAAE,GAAGC,qBAAAA,EAAAA;AAC/B,IAAA,MAAMC,QAAWC,GAAAA,0BAAAA,EAAAA;IACjB,MAAM,EAAEC,WAAWC,gBAAgB,EAAEC,WAAW,EAAEC,MAAM,EAAE,GAAGC,qBAAAA,EAAAA;IAC7D,MAAM,EAAEC,UAAU,EAAE,GAAGC,iBAAAA,EAAAA;IACvB,MAAMC,cAAAA,GAAiBC,iBAAMC,MAAM,EAAA;IACnC,MAAM,EAAEC,IAAI,EAAE,GAAGC,oBAAAA,EAAAA;IACjB,MAAMC,QAAAA,GAAWC,uBAAY,CAACC,IAAAA,GAASJ,KAAK,CAAC,wBAAwB,CAAC,EAAEI,IAAO,CAAA,EAAA;AAC7EC,QAAAA,OAAAA,CAAAA,GAAAA;YACEnB,kBAAmB,CAAA;gBACjBoB,IAAM,EAAA,QAAA;AACNC,gBAAAA,OAAAA,EAASvB,aAAc,CAAA;oBACrBwB,EAAI,EAAA,oBAAA;oBACJC,cAAgB,EAAA;AAClB,iBAAA;AACF,aAAA,CAAA;AACF,SAAA;AAEAC,QAAAA,SAAAA,CAAAA,GAAAA;YACEf,UAAW,CAAA,eAAA,CAAA;YAEXT,kBAAmB,CAAA;gBACjBoB,IAAM,EAAA,SAAA;AACNC,gBAAAA,OAAAA,EAASvB,aAAc,CAAA;AACrBwB,oBAAAA,EAAAA,EAAIG,OAAQ,CAAA,wBAAA,CAAA;oBACZF,cAAgB,EAAA;AAClB,iBAAA;AACF,aAAA,CAAA;;AAGArB,YAAAA,QAAAA,CAAS,CAAC,CAAA,CAAA;AACZ;AACF,KAAA,CAAA;AAEA,IAAA,MAAMwB,yBAAyB,OAAOC,IAAAA,GAAAA;;;;AAIpC,QAAA,MAAMrB,WAAcK,GAAAA,cAAAA,CAAeiB,OAAO,CAACC,cAAc,EAAA;QAEzD,MAAMb,QAAAA,CAASc,MAAM,CAAC;AAAE,YAAA,GAAGH,IAAI;AAAE,YAAA,GAAGrB,WAAW;AAAEyB,YAAAA,KAAAA,EAAO;AAAG,SAAA,CAAA;AAC7D,KAAA;AAEA,IAAA,qBACEC,eAACC,CAAAA,iBAAAA,EAAAA;;AACC,0BAAAC,cAAA,CAACC,WAAKC,KAAK,EAAA;0BACRtC,aACC,CAAA;oBAAEwB,EAAI,EAAA,oBAAA;oBAAsBC,cAAgB,EAAA;iBAC5C,EAAA;oBAAEc,IAAM,EAAA;AAAQ,iBAAA;;0BAGpBH,cAACI,CAAAA,aAAAA,EAAAA;gBACCC,kBAAkB,EAAA,IAAA;gBAClBC,aAAe,EAAA;oBAAEH,IAAM,EAAA,EAAA;oBAAII,WAAa,EAAA;AAAG,iBAAA;gBAC3CC,QAAUhB,EAAAA,sBAAAA;gBACViB,gBAAkBC,EAAAA,4BAAAA;0BAEjB,CAAC,EAAEC,YAAY,EAAEC,MAAM,EAAEC,YAAY,EAAEC,MAAM,EAAE,iBAC9ChB,eAACiB,CAAAA,WAAAA,EAAAA;wBAAKC,UAAU,EAAA,IAAA;wBAACR,QAAUG,EAAAA,YAAAA;;AACzB,0CAAAX,cAAA,CAACiB,cAAQC,MAAM,EAAA;gCACbC,aACE,EAAA,CAAChD,kCACC6B,cAACoB,CAAAA,mBAAAA,EAAAA;oCAAOlC,IAAK,EAAA,QAAA;AAASmC,oCAAAA,OAAAA,EAASvC,SAASZ,SAAS;AAAEoD,oCAAAA,SAAAA,gBAAWtB,cAACuB,CAAAA,WAAAA,EAAAA,EAAAA,CAAAA;8CAC5D3D,aAAc,CAAA;wCACbwB,EAAI,EAAA,aAAA;wCACJC,cAAgB,EAAA;AAClB,qCAAA;;AAINmC,gCAAAA,KAAAA,EAAO5D,aAAc,CAAA;oCACnBwB,EAAI,EAAA,6BAAA;oCACJC,cAAgB,EAAA;AAClB,iCAAA,CAAA;AACAoC,gCAAAA,QAAAA,EAAU7D,aAAc,CAAA;oCACtBwB,EAAI,EAAA,mCAAA;oCACJC,cAAgB,EAAA;AAClB,iCAAA;;AAEF,0CAAAW,cAAA,CAACiB,cAAQS,OAAO,EAAA;AACd,gCAAA,QAAA,gBAAA5B,eAAC6B,CAAAA,iBAAAA,EAAAA;oCACCC,UAAW,EAAA,UAAA;oCACXC,SAAU,EAAA,QAAA;oCACVC,UAAW,EAAA,SAAA;oCACXC,GAAK,EAAA,CAAA;oCACLC,SAAS,EAAA,IAAA;oCACTC,UAAY,EAAA,CAAA;oCACZC,aAAe,EAAA,CAAA;oCACfC,WAAa,EAAA,CAAA;oCACbC,YAAc,EAAA,CAAA;oCACdC,MAAO,EAAA,cAAA;;sDAEPvC,eAAC6B,CAAAA,iBAAAA,EAAAA;4CAAKE,SAAU,EAAA,QAAA;4CAASC,UAAW,EAAA,SAAA;;8DAClC9B,cAACsC,CAAAA,uBAAAA,EAAAA;oDAAWC,OAAQ,EAAA,OAAA;oDAAQC,GAAI,EAAA,IAAA;8DAC7B5E,aAAc,CAAA;AACbwB,wDAAAA,EAAAA,EAAIG,OAAQ,CAAA,qBAAA,CAAA;wDACZF,cAAgB,EAAA;AAClB,qDAAA;;AAGF,8DAAAS,eAAA,CAAC2C,kBAAKC,IAAI,EAAA;oDAACX,GAAK,EAAA,CAAA;;AACd,sEAAA/B,cAAA,CAACyC,kBAAKE,IAAI,EAAA;4DAACC,GAAK,EAAA,CAAA;4DAAGf,SAAU,EAAA,QAAA;4DAASC,UAAW,EAAA,SAAA;oFAC/ChC,eAAA,CAAC+C,mBAAMH,IAAI,EAAA;gEACTvC,IAAK,EAAA,MAAA;gEACL2C,KACEhC,EAAAA,MAAAA,EAAQX,OACJvC,aAAc,CAAA;AAAEwB,oEAAAA,EAAAA,EAAI0B,OAAOX,IAAI;oEAAEd,cAAgB,EAAA;iEACjD,CAAA,GAAA,KAAA;gEAEN0D,QAAQ,EAAA,IAAA;;AAER,kFAAA/C,cAAA,CAAC6C,mBAAMG,KAAK,EAAA;kFACTpF,aAAc,CAAA;4EACbwB,EAAI,EAAA,aAAA;4EACJC,cAAgB,EAAA;AAClB,yEAAA;;kFAEFW,cAACiD,CAAAA,sBAAAA,EAAAA;wEAAUC,KAAOtC,EAAAA,MAAAA,CAAOT,IAAI,IAAI,EAAA;wEAAIgD,QAAUtC,EAAAA;;AAC/C,kFAAAb,cAAA,CAAC6C,mBAAMO,KAAK,EAAA,EAAA;;;;AAGhB,sEAAApD,cAAA,CAACyC,kBAAKE,IAAI,EAAA;4DAACC,GAAK,EAAA,CAAA;4DAAGf,SAAU,EAAA,QAAA;4DAASC,UAAW,EAAA,SAAA;oFAC/ChC,eAAA,CAAC+C,mBAAMH,IAAI,EAAA;gEACTvC,IAAK,EAAA,aAAA;gEACL2C,KACEhC,EAAAA,MAAAA,EAAQP,cACJ3C,aAAc,CAAA;AACZwB,oEAAAA,EAAAA,EAAI0B,OAAOP,WAAW;oEACtBlB,cAAgB,EAAA;iEAElB,CAAA,GAAA,KAAA;gEAEN0D,QAAQ,EAAA,IAAA;;AAER,kFAAA/C,cAAA,CAAC6C,mBAAMG,KAAK,EAAA;kFACTpF,aAAc,CAAA;4EACbwB,EAAI,EAAA,oBAAA;4EACJC,cAAgB,EAAA;AAClB,yEAAA;;kFAEFW,cAACqD,CAAAA,qBAAAA,EAAAA;wEAASH,KAAOtC,EAAAA,MAAAA,CAAOL,WAAW,IAAI,EAAA;wEAAI4C,QAAUtC,EAAAA;;AACrD,kFAAAb,cAAA,CAAC6C,mBAAMO,KAAK,EAAA,EAAA;;;;;;;;AAMnB,wCAAA,CAACjF,kCACA6B,cAACsD,CAAAA,KAAAA,EAAAA;4CACCC,GAAK9E,EAAAA,cAAAA;4CACLL,WAAaA,EAAAA,WAAAA;4CACbC,MAAQA,EAAAA;;;;;;;;;;AAU5B;AAEamF,MAAAA,wBAAAA,GAA2B,kBACtCxD,cAAA,CAACC,WAAKwD,OAAO,EAAA;AAACrF,QAAAA,WAAAA,EAAasF,sBAAYC,UAAU;AAC/C,QAAA,QAAA,gBAAA3D,cAACrC,CAAAA,UAAAA,EAAAA,EAAAA;AAEH,KAAA;;;;;"}