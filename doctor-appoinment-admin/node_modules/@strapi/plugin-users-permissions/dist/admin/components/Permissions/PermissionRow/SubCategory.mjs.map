{"version":3,"file":"SubCategory.mjs","sources":["../../../../../admin/src/components/Permissions/PermissionRow/SubCategory.jsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\n\nimport { Box, Checkbox, Flex, Typography, Grid, VisuallyHidden } from '@strapi/design-system';\nimport { Cog } from '@strapi/icons';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useUsersPermissions } from '../../../contexts/UsersPermissionsContext';\n\nimport CheckboxWrapper from './CheckboxWrapper';\n\nconst Border = styled.div`\n  flex: 1;\n  align-self: center;\n  border-top: 1px solid ${({ theme }) => theme.colors.neutral150};\n`;\n\nconst SubCategory = ({ subCategory }) => {\n  const { formatMessage } = useIntl();\n  const { onChange, onChangeSelectAll, onSelectedAction, selectedAction, modifiedData } =\n    useUsersPermissions();\n\n  const currentScopedModifiedData = useMemo(() => {\n    return get(modifiedData, subCategory.name, {});\n  }, [modifiedData, subCategory]);\n\n  const hasAllActionsSelected = useMemo(() => {\n    return Object.values(currentScopedModifiedData).every((action) => action.enabled === true);\n  }, [currentScopedModifiedData]);\n\n  const hasSomeActionsSelected = useMemo(() => {\n    return (\n      Object.values(currentScopedModifiedData).some((action) => action.enabled === true) &&\n      !hasAllActionsSelected\n    );\n  }, [currentScopedModifiedData, hasAllActionsSelected]);\n\n  const handleChangeSelectAll = useCallback(\n    ({ target: { name } }) => {\n      onChangeSelectAll({ target: { name, value: !hasAllActionsSelected } });\n    },\n    [hasAllActionsSelected, onChangeSelectAll]\n  );\n\n  const isActionSelected = useCallback(\n    (actionName) => {\n      return selectedAction === actionName;\n    },\n    [selectedAction]\n  );\n\n  return (\n    <Box>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Box paddingRight={4}>\n          <Typography variant=\"sigma\" textColor=\"neutral600\">\n            {subCategory.label}\n          </Typography>\n        </Box>\n        <Border />\n        <Box paddingLeft={4}>\n          <Checkbox\n            name={subCategory.name}\n            checked={hasSomeActionsSelected ? 'indeterminate' : hasAllActionsSelected}\n            onCheckedChange={(value) =>\n              handleChangeSelectAll({ target: { name: subCategory.name, value } })\n            }\n          >\n            {formatMessage({ id: 'app.utils.select-all', defaultMessage: 'Select all' })}\n          </Checkbox>\n        </Box>\n      </Flex>\n      <Flex paddingTop={6} paddingBottom={6}>\n        <Grid.Root gap={2} style={{ flex: 1 }}>\n          {subCategory.actions.map((action) => {\n            const name = `${action.name}.enabled`;\n\n            return (\n              <Grid.Item col={6} key={action.name} direction=\"column\" alignItems=\"stretch\">\n                <CheckboxWrapper isActive={isActionSelected(action.name)} padding={2} hasRadius>\n                  <Checkbox\n                    checked={get(modifiedData, name, false)}\n                    name={name}\n                    onCheckedChange={(value) => onChange({ target: { name, value } })}\n                  >\n                    {action.label}\n                  </Checkbox>\n                  <button\n                    type=\"button\"\n                    onClick={() => onSelectedAction(action.name)}\n                    style={{ display: 'inline-flex', alignItems: 'center' }}\n                  >\n                    <VisuallyHidden tag=\"span\">\n                      {formatMessage(\n                        {\n                          id: 'app.utils.show-bound-route',\n                          defaultMessage: 'Show bound route for {route}',\n                        },\n                        {\n                          route: action.name,\n                        }\n                      )}\n                    </VisuallyHidden>\n                    <Cog id=\"cog\" cursor=\"pointer\" />\n                  </button>\n                </CheckboxWrapper>\n              </Grid.Item>\n            );\n          })}\n        </Grid.Root>\n      </Flex>\n    </Box>\n  );\n};\n\nSubCategory.propTypes = {\n  subCategory: PropTypes.object.isRequired,\n};\n\nexport default SubCategory;\n"],"names":["Border","styled","div","theme","colors","neutral150","SubCategory","subCategory","formatMessage","useIntl","onChange","onChangeSelectAll","onSelectedAction","selectedAction","modifiedData","useUsersPermissions","currentScopedModifiedData","useMemo","get","name","hasAllActionsSelected","Object","values","every","action","enabled","hasSomeActionsSelected","some","handleChangeSelectAll","useCallback","target","value","isActionSelected","actionName","_jsxs","Box","Flex","justifyContent","alignItems","_jsx","paddingRight","Typography","variant","textColor","label","paddingLeft","Checkbox","checked","onCheckedChange","id","defaultMessage","paddingTop","paddingBottom","Grid","Root","gap","style","flex","actions","map","Item","col","direction","CheckboxWrapper","isActive","padding","hasRadius","button","type","onClick","display","VisuallyHidden","tag","route","Cog","cursor","propTypes","PropTypes","object","isRequired"],"mappings":";;;;;;;;;;;AAaA,MAAMA,MAAAA,GAASC,MAAOC,CAAAA,GAAG;;;wBAGD,EAAE,CAAC,EAAEC,KAAK,EAAE,GAAKA,KAAMC,CAAAA,MAAM,CAACC,UAAU,CAAC;AACjE,CAAC;AAED,MAAMC,WAAc,GAAA,CAAC,EAAEC,WAAW,EAAE,GAAA;IAClC,MAAM,EAAEC,aAAa,EAAE,GAAGC,OAAAA,EAAAA;IAC1B,MAAM,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,YAAY,EAAE,GACnFC,mBAAAA,EAAAA;AAEF,IAAA,MAAMC,4BAA4BC,OAAQ,CAAA,IAAA;AACxC,QAAA,OAAOC,GAAIJ,CAAAA,YAAAA,EAAcP,WAAYY,CAAAA,IAAI,EAAE,EAAC,CAAA;KAC3C,EAAA;AAACL,QAAAA,YAAAA;AAAcP,QAAAA;AAAY,KAAA,CAAA;AAE9B,IAAA,MAAMa,wBAAwBH,OAAQ,CAAA,IAAA;QACpC,OAAOI,MAAAA,CAAOC,MAAM,CAACN,yBAA2BO,CAAAA,CAAAA,KAAK,CAAC,CAACC,MAAAA,GAAWA,MAAOC,CAAAA,OAAO,KAAK,IAAA,CAAA;KACpF,EAAA;AAACT,QAAAA;AAA0B,KAAA,CAAA;AAE9B,IAAA,MAAMU,yBAAyBT,OAAQ,CAAA,IAAA;AACrC,QAAA,OACEI,MAAOC,CAAAA,MAAM,CAACN,yBAAAA,CAAAA,CAA2BW,IAAI,CAAC,CAACH,MAAAA,GAAWA,MAAOC,CAAAA,OAAO,KAAK,IAAA,CAAA,IAC7E,CAACL,qBAAAA;KAEF,EAAA;AAACJ,QAAAA,yBAAAA;AAA2BI,QAAAA;AAAsB,KAAA,CAAA;IAErD,MAAMQ,qBAAAA,GAAwBC,YAC5B,CAAC,EAAEC,QAAQ,EAAEX,IAAI,EAAE,EAAE,GAAA;QACnBR,iBAAkB,CAAA;YAAEmB,MAAQ,EAAA;AAAEX,gBAAAA,IAAAA;AAAMY,gBAAAA,KAAAA,EAAO,CAACX;AAAsB;AAAE,SAAA,CAAA;KAEtE,EAAA;AAACA,QAAAA,qBAAAA;AAAuBT,QAAAA;AAAkB,KAAA,CAAA;IAG5C,MAAMqB,gBAAAA,GAAmBH,YACvB,CAACI,UAAAA,GAAAA;AACC,QAAA,OAAOpB,cAAmBoB,KAAAA,UAAAA;KAE5B,EAAA;AAACpB,QAAAA;AAAe,KAAA,CAAA;AAGlB,IAAA,qBACEqB,IAACC,CAAAA,GAAAA,EAAAA;;0BACCD,IAACE,CAAAA,IAAAA,EAAAA;gBAAKC,cAAe,EAAA,eAAA;gBAAgBC,UAAW,EAAA,QAAA;;kCAC9CC,GAACJ,CAAAA,GAAAA,EAAAA;wBAAIK,YAAc,EAAA,CAAA;AACjB,wBAAA,QAAA,gBAAAD,GAACE,CAAAA,UAAAA,EAAAA;4BAAWC,OAAQ,EAAA,OAAA;4BAAQC,SAAU,EAAA,YAAA;AACnCpC,4BAAAA,QAAAA,EAAAA,WAAAA,CAAYqC;;;kCAGjBL,GAACvC,CAAAA,MAAAA,EAAAA,EAAAA,CAAAA;kCACDuC,GAACJ,CAAAA,GAAAA,EAAAA;wBAAIU,WAAa,EAAA,CAAA;AAChB,wBAAA,QAAA,gBAAAN,GAACO,CAAAA,QAAAA,EAAAA;AACC3B,4BAAAA,IAAAA,EAAMZ,YAAYY,IAAI;AACtB4B,4BAAAA,OAAAA,EAASrB,yBAAyB,eAAkBN,GAAAA,qBAAAA;4BACpD4B,eAAiB,EAAA,CAACjB,QAChBH,qBAAsB,CAAA;oCAAEE,MAAQ,EAAA;AAAEX,wCAAAA,IAAAA,EAAMZ,YAAYY,IAAI;AAAEY,wCAAAA;AAAM;AAAE,iCAAA,CAAA;sCAGnEvB,aAAc,CAAA;gCAAEyC,EAAI,EAAA,sBAAA;gCAAwBC,cAAgB,EAAA;AAAa,6BAAA;;;;;0BAIhFX,GAACH,CAAAA,IAAAA,EAAAA;gBAAKe,UAAY,EAAA,CAAA;gBAAGC,aAAe,EAAA,CAAA;wCAClCb,GAAA,CAACc,KAAKC,IAAI,EAAA;oBAACC,GAAK,EAAA,CAAA;oBAAGC,KAAO,EAAA;wBAAEC,IAAM,EAAA;AAAE,qBAAA;AACjClD,oBAAAA,QAAAA,EAAAA,WAAAA,CAAYmD,OAAO,CAACC,GAAG,CAAC,CAACnC,MAAAA,GAAAA;AACxB,wBAAA,MAAML,OAAO,CAAC,EAAEK,OAAOL,IAAI,CAAC,QAAQ,CAAC;wBAErC,qBACEoB,GAAA,CAACc,KAAKO,IAAI,EAAA;4BAACC,GAAK,EAAA,CAAA;4BAAqBC,SAAU,EAAA,QAAA;4BAASxB,UAAW,EAAA,SAAA;AACjE,4BAAA,QAAA,gBAAAJ,IAAC6B,CAAAA,eAAAA,EAAAA;gCAAgBC,QAAUhC,EAAAA,gBAAAA,CAAiBR,OAAOL,IAAI,CAAA;gCAAG8C,OAAS,EAAA,CAAA;gCAAGC,SAAS,EAAA,IAAA;;kDAC7E3B,GAACO,CAAAA,QAAAA,EAAAA;wCACCC,OAAS7B,EAAAA,GAAAA,CAAIJ,cAAcK,IAAM,EAAA,KAAA,CAAA;wCACjCA,IAAMA,EAAAA,IAAAA;wCACN6B,eAAiB,EAAA,CAACjB,QAAUrB,QAAS,CAAA;gDAAEoB,MAAQ,EAAA;AAAEX,oDAAAA,IAAAA;AAAMY,oDAAAA;AAAM;AAAE,6CAAA,CAAA;AAE9DP,wCAAAA,QAAAA,EAAAA,MAAAA,CAAOoB;;kDAEVV,IAACiC,CAAAA,QAAAA,EAAAA;wCACCC,IAAK,EAAA,QAAA;wCACLC,OAAS,EAAA,IAAMzD,gBAAiBY,CAAAA,MAAAA,CAAOL,IAAI,CAAA;wCAC3CqC,KAAO,EAAA;4CAAEc,OAAS,EAAA,aAAA;4CAAehC,UAAY,EAAA;AAAS,yCAAA;;0DAEtDC,GAACgC,CAAAA,cAAAA,EAAAA;gDAAeC,GAAI,EAAA,MAAA;0DACjBhE,aACC,CAAA;oDACEyC,EAAI,EAAA,4BAAA;oDACJC,cAAgB,EAAA;iDAElB,EAAA;AACEuB,oDAAAA,KAAAA,EAAOjD,OAAOL;AAChB,iDAAA;;0DAGJoB,GAACmC,CAAAA,GAAAA,EAAAA;gDAAIzB,EAAG,EAAA,KAAA;gDAAM0B,MAAO,EAAA;;;;;;AAzBHnD,yBAAAA,EAAAA,MAAAA,CAAOL,IAAI,CAAA;AA8BvC,qBAAA;;;;;AAKV;AAEAb,WAAAA,CAAYsE,SAAS,GAAG;IACtBrE,WAAasE,EAAAA,SAAAA,CAAUC,MAAM,CAACC;AAChC,CAAA;;;;"}