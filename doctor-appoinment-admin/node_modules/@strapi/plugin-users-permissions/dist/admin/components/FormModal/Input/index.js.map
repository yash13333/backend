{"version":3,"file":"index.js","sources":["../../../../../admin/src/components/FormModal/Input/index.jsx"],"sourcesContent":["/**\n *\n * Input\n *\n */\n\nimport * as React from 'react';\n\nimport { TextInput, Toggle, Field } from '@strapi/design-system';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nconst Input = ({\n  description,\n  disabled,\n  intlLabel,\n  error,\n  name,\n  onChange,\n  placeholder,\n  providerToEditName,\n  type,\n  value,\n}) => {\n  const { formatMessage } = useIntl();\n  const inputValue =\n    name === 'noName'\n      ? `${window.strapi.backendURL}/api/connect/${providerToEditName}/callback`\n      : value;\n\n  const label = formatMessage(\n    { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n    { provider: providerToEditName, ...intlLabel.values }\n  );\n  const hint = description\n    ? formatMessage(\n        { id: description.id, defaultMessage: description.defaultMessage },\n        { provider: providerToEditName, ...description.values }\n      )\n    : '';\n\n  if (type === 'bool') {\n    return (\n      <Field.Root hint={hint} name={name}>\n        <Field.Label>{label}</Field.Label>\n        <Toggle\n          aria-label={name}\n          checked={value}\n          disabled={disabled}\n          offLabel={formatMessage({\n            id: 'app.components.ToggleCheckbox.off-label',\n            defaultMessage: 'Off',\n          })}\n          onLabel={formatMessage({\n            id: 'app.components.ToggleCheckbox.on-label',\n            defaultMessage: 'On',\n          })}\n          onChange={(e) => {\n            onChange({ target: { name, value: e.target.checked } });\n          }}\n        />\n        <Field.Hint />\n      </Field.Root>\n    );\n  }\n\n  const formattedPlaceholder = placeholder\n    ? formatMessage(\n        { id: placeholder.id, defaultMessage: placeholder.defaultMessage },\n        { ...placeholder.values }\n      )\n    : '';\n\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n\n  return (\n    <Field.Root error={errorMessage} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <TextInput\n        disabled={disabled}\n        onChange={onChange}\n        placeholder={formattedPlaceholder}\n        type={type}\n        value={inputValue}\n      />\n      <Field.Error />\n    </Field.Root>\n  );\n};\n\nInput.defaultProps = {\n  description: null,\n  disabled: false,\n  error: '',\n  placeholder: null,\n  value: '',\n};\n\nInput.propTypes = {\n  description: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n    values: PropTypes.object,\n  }),\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  intlLabel: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n    values: PropTypes.object,\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n    values: PropTypes.object,\n  }),\n  providerToEditName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nexport default Input;\n"],"names":["Input","description","disabled","intlLabel","error","name","onChange","placeholder","providerToEditName","type","value","formatMessage","useIntl","inputValue","window","strapi","backendURL","label","id","defaultMessage","provider","values","hint","_jsxs","Field","Root","_jsx","Label","Toggle","aria-label","checked","offLabel","onLabel","e","target","Hint","formattedPlaceholder","errorMessage","TextInput","Error","defaultProps","propTypes","PropTypes","shape","string","isRequired","object","bool","func","oneOfType"],"mappings":"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"}